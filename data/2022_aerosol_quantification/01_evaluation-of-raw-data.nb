(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    364236,       7255]
NotebookOptionsPosition[    361088,       7196]
NotebookOutlinePosition[    361561,       7214]
CellTagsIndexPosition[    361518,       7211]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"NotebookDirectory", "[", "]"}]], "Input",
 CellChangeTimes->{{3.892870239986803*^9, 3.892870259265501*^9}, {
  3.9218073339422913`*^9, 3.921807336777983*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"393f7b1f-d91d-451a-845b-e1a823fbffb1"],

Cell[BoxData["\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\\"\>"], \
"Output",
 CellChangeTimes->{3.919507149152753*^9, 3.921807337403392*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"e6df8ebf-873a-461e-b4c5-d2eea45ccead"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"src", ",", "outp"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"src", "=", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "outp", "=", "\"\<D:\\\\Daten\\\\b1464\\\\Desktop\\\\Ausgabe\\\\\>\""}], 
   RowBox[{
   "(*", "\"\<H:\\\\Projekte\\\\Quantifizierung humane \
Aerosolemission\\\\Datenerhebung und Auswertung\\\\Ausgabe\\\\\>\"", "*)"}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"files", "=."}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"files", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"FileNames", "[", 
       RowBox[{"All", ",", "src", ",", "#"}], "]"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"01", " ", "entfernen"}], "*)"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{"pexaFiles", "=."}], "\[IndentingNewLine]", 
 RowBox[{"logFiles", "=."}], "\[IndentingNewLine]", 
 RowBox[{"respFiles", "=."}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pexaFiles", "=", 
   RowBox[{
    RowBox[{"StringCases", "[", 
     RowBox[{
      RowBox[{"files", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"__", "~~", "\"\<.xlsx\>\""}]}], "]"}], "/.", 
    RowBox[{
     RowBox[{"{", "}"}], "->", "Nothing"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"logFiles", "=", 
   RowBox[{
    RowBox[{"StringCases", "[", 
     RowBox[{
      RowBox[{"files", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"__", "~~", "\"\<_protocol.txt\>\""}]}], "]"}], "/.", 
    RowBox[{
     RowBox[{"{", "}"}], "->", "Nothing"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"respFiles", "=", 
   RowBox[{
    RowBox[{"StringCases", "[", 
     RowBox[{
      RowBox[{"files", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"__", "~~", "\"\<Spiro und Diff.tsv\>\""}]}], "]"}], "/.", 
    RowBox[{
     RowBox[{"{", "}"}], "->", "Nothing"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"evalfiles", "=."}], "\[IndentingNewLine]", 
 RowBox[{"evalfiles", "=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Flatten", "@", "pexaFiles"}], ",", 
     RowBox[{"Flatten", "@", "logFiles"}], ",", 
     RowBox[{"Flatten", "@", "respFiles"}]}], "}"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.886224522460371*^9, 3.8862245310211663`*^9}, {
   3.886224561305142*^9, 3.886224612697219*^9}, {3.8862372203411474`*^9, 
   3.8862372264914136`*^9}, {3.88623769023717*^9, 3.886237714789941*^9}, {
   3.886237961741186*^9, 3.886237962530711*^9}, {3.886575916877613*^9, 
   3.886575917245409*^9}, {3.8865769222709513`*^9, 3.8865769757299757`*^9}, {
   3.886577170204347*^9, 3.886577201747873*^9}, 3.8871916850473375`*^9, {
   3.887775186013011*^9, 3.887775194987303*^9}, {3.8877752460626907`*^9, 
   3.8877752477967625`*^9}, {3.8877754363985744`*^9, 
   3.8877754652816687`*^9}, {3.8878586052014*^9, 3.887858614250635*^9}, {
   3.889238707003149*^9, 3.8892387071555524`*^9}, {3.8904672803606634`*^9, 
   3.890467280533265*^9}, {3.890986618641816*^9, 3.890986630802039*^9}, {
   3.892893559348516*^9, 3.892893599073825*^9}, {3.892893680694679*^9, 
   3.892893699167486*^9}, 3.8932375199274793`*^9, {3.893237677831798*^9, 
   3.893237680665432*^9}, {3.893325368115013*^9, 3.8933253737932787`*^9}, {
   3.893847792382911*^9, 3.8938478008669853`*^9}, {3.8938671206339917`*^9, 
   3.8938671217419205`*^9}, {3.902218498329236*^9, 3.902218555983889*^9}, {
   3.9022213149293256`*^9, 3.9022213296582537`*^9}, {3.9195071868734555`*^9, 
   3.9195072085077906`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"426a6280-7815-4557-b910-2ae32f1d9b1e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\01\\\\2023-\
03-07 10.01.47.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\01\\\\01_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\01\\\\QHA01 \
Spiro und Diff.tsv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\02\\\\2023-\
03-10 09.47.59.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\02\\\\02_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\02\\\\QHA02 \
Spiro und Diff.tsv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\03\\\\2023-\
03-10 12.46.27.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\03\\\\03_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\03\\\\QHA03 \
Spiro und Diff.tsv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\04\\\\2023-\
03-17 16.23.29.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\04\\\\04_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\04\\\\QHA04 \
Spiro und Diff.tsv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\05\\\\2023-\
03-17 18.29.59.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\05\\\\05_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\05\\\\QHA05 \
Spiro und Diff.tsv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\06\\\\2023-\
03-21 09.18.10.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\06\\\\06_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\06\\\\QHA06 \
Spiro und Diff.tsv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\07\\\\2023-\
03-21 13.03.53.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\07\\\\07_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\07\\\\QHA07 \
Spiro und Diff.tsv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\08\\\\2023-\
03-23 09.23.06.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\08\\\\08_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\08\\\\QHA08 \
Spiro und Diff.tsv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\09\\\\2023-\
03-23 13.27.18.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\09\\\\09_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\09\\\\QHA09 \
Spiro und Diff.tsv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\10\\\\2023-\
03-28 13.24.24.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\10\\\\10_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\10\\\\QHA10 \
Spiro und Diff.tsv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\11\\\\2023-\
03-29 09.16.03.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\11\\\\11_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\11\\\\QHA11 \
Spiro und Diff.tsv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\12\\\\2023-\
03-29 13.33.25.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\12\\\\12_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\12\\\\QHA12 \
Spiro und Diff.tsv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\13\\\\2023-\
04-03 08.40.54.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\13\\\\13_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\13\\\\QHA13 \
Spiro und Diff.tsv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\14\\\\2023-\
04-03 10.52.04.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\14\\\\14_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\14\\\\QHA14 \
Spiro und Diff.tsv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\15\\\\2023-\
04-04 15.16.01.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\15\\\\15_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\15\\\\QHA15 \
Spiro und Diff.tsv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\16\\\\2023-\
04-04 17.53.08.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\16\\\\16_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\16\\\\QHA16 \
Spiro und Diff.tsv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\17\\\\2023-\
04-05 10.17.32.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\17\\\\17_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\17\\\\QHA17 \
Spiro und Diff.tsv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\18\\\\2023-\
04-05 12.24.27.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\18\\\\18_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\18\\\\QHA18 \
Spiro und Diff.tsv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\19\\\\2023-\
04-06 10.27.28.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\19\\\\19_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\19\\\\QHA19 \
Spiro und Diff.tsv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\20\\\\2023-\
04-12 09.33.55.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\20\\\\20_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\20\\\\QHA20 \
Spiro und Diff.tsv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\21\\\\2023-\
04-12 12.18.05.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\21\\\\21_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\21\\\\QHA21 \
Spiro und Diff.tsv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\22\\\\2023-\
04-13 13.26.25.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\22\\\\22_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\22\\\\QHA22 \
Spiro und Diff.tsv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\23\\\\2023-\
04-13 15.54.39.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\23\\\\23_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\23\\\\QHA23 \
Spiro und Diff.tsv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\24\\\\2023-\
04-14 10.15.38.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\24\\\\24_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\24\\\\QHA24 \
Spiro und Diff.tsv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\25\\\\2023-\
04-26 17.50.33.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\25\\\\25_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\25\\\\QHA25 \
Spiro und Diff.tsv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\26\\\\2023-\
04-27 14.03.15.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\26\\\\26_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\26\\\\QHA26 \
Spiro und Diff.tsv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\27\\\\2023-\
05-02 10.18.41.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\27\\\\27_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\27\\\\QHA27 \
Spiro und Diff.tsv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\28\\\\2023-\
05-04 13.40.59.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\28\\\\28_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\28\\\\QHA28 \
Spiro und Diff.tsv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\29\\\\2023-\
05-05 13.46.14.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\29\\\\29_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\29\\\\QHA29 \
Spiro und Diff.tsv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\30\\\\2023-\
06-06 09.06.49.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\30\\\\30_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\30\\\\QHA30 \
Spiro und Diff.tsv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\31\\\\2023-\
06-06 18.20.52.xlsx\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\31\\\\31_\
protocol.txt\"\>", 
     ",", "\<\"D:\\\\Daten\\\\b1464\\\\Desktop\\\\Messungen\\\\31\\\\QHA31 \
Spiro und Diff.tsv\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9022226145292807`*^9, 3.9195072806597443`*^9, 
  3.9206275350990686`*^9, 3.921138642475972*^9, 3.921731153418524*^9, 
  3.921807267667723*^9, 3.921807608635404*^9, 3.9218931090399947`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"31f7979b-9c7a-4b16-a84b-1db26b862315"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"leere", " ", "Datenexport"}], "-", "Datei"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataexport", "=."}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataexport", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Put", "[", 
     RowBox[{"dataexport", ",", 
      RowBox[{
      "outp", "~~", 
       "\"\<Datenexport\\\\evaluated Pexa measurements.m\>\""}]}], "]"}], 
    ";"}], "  ", "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8938476815650578`*^9, 3.893847699813048*^9}, {
   3.893847839129753*^9, 3.893847868218815*^9}, {3.893847934823456*^9, 
   3.893847955547378*^9}, {3.8938480715871444`*^9, 3.8938480950709987`*^9}, {
   3.8938481700828943`*^9, 3.8938482640146885`*^9}, {3.89384832808461*^9, 
   3.893848419929473*^9}, {3.893848506776246*^9, 3.893848511514346*^9}, {
   3.893848557544612*^9, 3.893848588071729*^9}, {3.8938669771246157`*^9, 
   3.893867020091587*^9}, {3.893867069450238*^9, 3.89386711193274*^9}, {
   3.8938671462549763`*^9, 3.8938672424108825`*^9}, {3.89386728018369*^9, 
   3.8938673481861887`*^9}, {3.893867379514038*^9, 3.8938677211907625`*^9}, 
   3.8939966747393007`*^9, {3.8941048187043295`*^9, 3.894104829963752*^9}, {
   3.8941049515192814`*^9, 3.894104956709975*^9}, 3.8941050276168795`*^9, {
   3.894105065512319*^9, 3.894105217928528*^9}, {3.8941052834412346`*^9, 
   3.894105322578169*^9}, {3.8941053963843045`*^9, 3.894105405294916*^9}, {
   3.894105483076951*^9, 3.8941054932652974`*^9}, {3.8941055568523045`*^9, 
   3.8941056156478357`*^9}, {3.8941056970473986`*^9, 
   3.8941056975668488`*^9}, {3.8941061299591627`*^9, 
   3.8941061750036416`*^9}, {3.8941069929045935`*^9, 
   3.8941070034615564`*^9}, {3.8941071165019536`*^9, 3.894107119588902*^9}, {
   3.8941082452107244`*^9, 3.894108254328333*^9}, {3.8941082975964417`*^9, 
   3.8941083093674*^9}, {3.894108497491454*^9, 3.894108536655839*^9}, {
   3.8941088711558495`*^9, 3.894108911205485*^9}, 3.894108976095107*^9, {
   3.894109095733751*^9, 3.8941091208697567`*^9}, {3.894109259206447*^9, 
   3.8941092886994114`*^9}, {3.8941169758030796`*^9, 
   3.8941169910383253`*^9}, {3.8941170252232428`*^9, 
   3.8941171084071875`*^9}, {3.8941171631765647`*^9, 3.894117165682522*^9}, {
   3.8941174749522424`*^9, 3.894117486326566*^9}, {3.894117518663679*^9, 
   3.8941175996354413`*^9}, 3.8942480299532905`*^9, {3.8942482575249224`*^9, 
   3.894248322379038*^9}, {3.8942483801261716`*^9, 3.894248404070142*^9}, {
   3.894249167964781*^9, 3.894249178133315*^9}, {3.894274008646387*^9, 
   3.8942740274718313`*^9}, {3.89427405765829*^9, 3.894274088604824*^9}, {
   3.8942752847905493`*^9, 3.8942752900029607`*^9}, {3.8942894648409414`*^9, 
   3.8942894658284016`*^9}, {3.89434565945074*^9, 3.8943456608337517`*^9}, {
   3.8943458152643065`*^9, 3.894345832185567*^9}, {3.8943458681045685`*^9, 
   3.8943459053398247`*^9}, {3.894348551562011*^9, 3.894348552361636*^9}, {
   3.8943486181295614`*^9, 3.894348634983796*^9}, {3.894368242572355*^9, 
   3.8943682434216633`*^9}, {3.8946946070111327`*^9, 3.894694624871527*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"fc290bc9-9b34-4b4b-bd94-5bb2bf1afa0d"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "evaluation", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"evaluation", "[", "files_List", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ID", "=."}], ";", "\[IndentingNewLine]", 
      RowBox[{"ID", "=", 
       RowBox[{
        RowBox[{"StringCases", "[", 
         RowBox[{
          RowBox[{"files", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"\"\<Messungen\\\\\>\"", "~~", 
            RowBox[{"Shortest", "[", "a__", "]"}], "~~", "\"\<\\\\2023\>\""}],
            "->", "a"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Importiere", " ", "die", " ", "originialen", " ", "Daten", " ", 
         "des", " ", "Pexa"}], "-", 
        RowBox[{
        "Messger\[ADoubleDot]ts", " ", "aus", " ", "der", " ", "XLSX"}], "-", 
        RowBox[{"Datei", " ", 
         RowBox[{"(", 
          RowBox[{"Blatt", " ", "3"}], ")"}]}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"dataPEXA", "=."}], ";", "\[IndentingNewLine]", 
      RowBox[{"dataPEXA", "=", 
       RowBox[{"Import", "[", 
        RowBox[{
         RowBox[{"files", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Data\>\"", ",", "3"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"dataPEXA", "=", 
       RowBox[{"Transpose", "[", "dataPEXA", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Umrechnen", " ", "der", " ", "elapsed", " ", "time", " ", "auf", " ", 
        "ms"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"dataPEXA", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "=", 
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Rest", "@", 
           RowBox[{"dataPEXA", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "*", "1000"}], ",", 
         RowBox[{"First", "@", 
          RowBox[{"dataPEXA", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Importiere", " ", "die", " ", "Protkolldatei"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"dataLOG", "=."}], ";", "\[IndentingNewLine]", 
      RowBox[{"dataLOG", "=", 
       RowBox[{"Import", "[", 
        RowBox[{"files", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", "Protokollaufbereitung", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"starttime", "=."}], " ", 
      RowBox[{"(*", 
       RowBox[{"in", " ", "ms"}], "*)"}], ";", "\[IndentingNewLine]", 
      RowBox[{"x", "=."}], ";", "\[IndentingNewLine]", 
      RowBox[{"starttime", "=", 
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{"StringCases", "[", 
          RowBox[{"dataLOG", ",", 
           RowBox[{
            RowBox[{"\"\<PExA Start :: \>\"", " ", "~~", " ", 
             RowBox[{"Shortest", "[", "x__", "]"}], " ", "~~", 
             "\"\< ---\>\""}], "->", "x"}]}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"times", "=."}], ";", "\[IndentingNewLine]", 
      RowBox[{"times", "=", 
       RowBox[{"StringCases", "[", 
        RowBox[{"dataLOG", ",", 
         RowBox[{
          RowBox[{
          "\"\<Anmerkungen --- \>\"", " ", "~~", " ", "x__", " ", "~~", " ", 
           "\"\< --- Fragebogen\>\""}], "->", 
          RowBox[{"x", "~~", "\"\< -\>\""}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"times", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"times", ",", 
         RowBox[{"\"\<, -\>\"", "->", "\"\<,nv -\>\""}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"times", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"StringSplit", "[", 
         RowBox[{"times", ",", "\"\< --- \>\""}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Kommata", " ", "als", " ", "versehentliche", " ", "Trennzeichen", " ",
         "in", " ", "den", " ", "Kommentarfeldern", " ", "m\[UDoubleDot]ssen",
         " ", "ersetzt", " ", "werden"}], " ", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"r", "=."}], ";", "\[IndentingNewLine]", 
      RowBox[{"a", "=."}], ";", "\[IndentingNewLine]", 
      RowBox[{"times", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r", "=", 
             RowBox[{"StringReverse", "@", 
              RowBox[{
               RowBox[{"StringReplace", "[", 
                RowBox[{
                 RowBox[{"StringCases", "[", 
                  RowBox[{
                   RowBox[{"StringReverse", "@", "#"}], ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Last", "@", 
                    RowBox[{"Characters", "[", "#", "]"}]}], "~~", " ", 
                    RowBox[{"Shortest", "[", "a__", "]"}], "~~", 
                    RowBox[{"\"\<,0\>\"", "|", "\"\<,1\>\""}]}], "->", 
                    "a"}]}], "]"}], ",", 
                 RowBox[{"\"\<,\>\"", "->", "\"\<***\>\""}]}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"StringReplace", "[", 
             RowBox[{"#", ",", 
              RowBox[{
               RowBox[{"StringReplace", "[", 
                RowBox[{"r", ",", 
                 RowBox[{"\"\<***\>\"", "->", "\"\<,\>\""}]}], "]"}], "->", 
               "r"}]}], "]"}]}], ")"}], "&"}], ",", "times"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"times", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringSplit", "[", 
           RowBox[{"#", ",", "\"\<,\>\""}], "]"}], "&"}], ",", "times"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"times", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"1", ";;", 
           RowBox[{"-", "2"}]}]}], "]"}], "]"}], "=", " ", 
       RowBox[{"ToExpression", "/@", 
        RowBox[{"times", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"1", ";;", 
            RowBox[{"-", "2"}]}]}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "die", " ", "Zeiten", " ", "werden", " ", "zur", " ", "Startzeit", 
         " ", "synchronisiert"}], ",", " ", 
        RowBox[{
        "also", " ", "zur", " ", "elapsed", " ", "time", " ", 
         "synchronisiert"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"times", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"times", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "-", "starttime"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"times", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"times", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "-", "starttime"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"times", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"StringReplace", "[", 
          RowBox[{
           RowBox[{"Last", "@", "#"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<***\>\"", "->", "\"\<,\>\""}], ",", 
             RowBox[{"\"\<nv -\>\"", "->", "\"\<nv\>\""}]}], "}"}]}], "]"}], 
         "&"}], "/@", "times"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{
       "die", " ", "Kommata", " ", "in", " ", "den", " ", "Kommentaren", " ", 
        "werden", " ", "wieder", " ", "eingepflegt"}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Protokoll", "-", 
        RowBox[{
        "Messabschnitte", " ", "in", " ", "dataPEXA", " ", "finden"}]}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"positions", "=."}], ";", "\[IndentingNewLine]", 
      RowBox[{"positions", "=", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"FirstPosition", "[", 
             RowBox[{
              RowBox[{"Rest", "[", 
               RowBox[{"dataPEXA", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
              RowBox[{"n_", "/;", 
               RowBox[{"n", ">=", "#"}]}]}], "]"}], "&"}], ",", 
           RowBox[{"Flatten", "[", 
            RowBox[{"times", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", 
               RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], "]"}]}], "]"}], ",", 
         "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"positions", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", "#", "]"}], "&"}], ",", "positions", ",", 
         RowBox[{"{", "1", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAAAAAAAAAgOD4f1gtx5o=
            "], {{0, 91.00467662921565}, {171.00878795160304`, 0}}, {0, 255},
            ColorFunction->RGBColor,
            ImageResolution->{143.9926, 143.9926},
            SmoothingQuality->"High"],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->{312.7521969878991, Automatic},
          ImageSizeRaw->{171.00878795160304`, 91.00467662921565},
          PlotRange->{{0, 171.00878795160304`}, {0, 91.00467662921565}}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "\"\<The OPC takes a sample and calculates the particle \
concentration, that is the primary output from the OPC. The total flow is \
0,25l/s , which is what you should use if you are interested of the exhaled \
particle rather then the particles collected in the impactor.\>\"", " ", 
         "Svante", " ", "Hojer"}], ",", " ", 
        RowBox[{"from", " ", "Pexa"}], ",", " ", 
        RowBox[{
        "02.01", ".2023", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "Partikelgr\[ODoubleDot]\[SZ]en", " ", "in", " ", "\[Micro]m", " ", 
         "Bins", " ", "des", "\[IndentingNewLine]", "11", "D", " ", "H20", 
         " ", "Aerosolspektrometer", " ", "Firma", " ", "Grimm", "\n", "\n", 
         "Bin", " ", "1", " ", "0"}], ",", 
        RowBox[{"309571553", "\n", "Bin", " ", "2", " ", "0"}], ",", 
        RowBox[{"3776321", "\n", "Bin", " ", "3", " ", "0"}], ",", 
        RowBox[{"452400811", "\n", "Bin", " ", "4", " ", "0"}], ",", 
        RowBox[{"555994647", "\n", "Bin", " ", "5", " ", "0"}], ",", 
        RowBox[{"70346326", "\n", "Bin", " ", "6", " ", "0"}], ",", 
        RowBox[{"943336729", "\n", "Bin", " ", "7", " ", "1"}], ",", 
        RowBox[{"149495579", "\n", "Bin", " ", "8", " ", "1"}], ",", 
        RowBox[{"277719573", "\n", "Bin", " ", "9", " ", "1"}], ",", 
        RowBox[{"375165427", "\n", "Bin", " ", "10", " ", "1"}], ",", 
        RowBox[{"46599766", "\n", "Bin", " ", "11", " ", "1"}], ",", 
        RowBox[{"566296996", "\n", "Bin", " ", "12", " ", "1"}], ",", 
        RowBox[{"692565199", "\n", "Bin", " ", "13", " ", "1"}], ",", 
        RowBox[{"885696842", "\n", "Bin", " ", "14", " ", "2"}], ",", 
        RowBox[{"158702163", "\n", "Bin", " ", "15", " ", "2"}], ",", 
        RowBox[{"51855379", "\n", "Bin", " ", "16", " ", "3"}], ",", 
        RowBox[{
        "422327161", "\n", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "\"\<This means the first bin is between 0,3096 and \
0,3776[\[Micro]m] and bin 16 contains particles larger then 3,4223[mm].\>\"", 
         " ", "Svante", " ", "Hojer"}]}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Berechnung", " ", "der", " ", "Volumina"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Expiratory", " ", "bounds", "\[IndentingNewLine]", 
         GraphicsBox[{{}, {{}, {}, 
            {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
             0.006944444444444445], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1: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
Gd+H+7//B9ksoSs=
              "]]}, 
            {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
             0.006944444444444445], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1: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
/wB6XUGb
              "]]}}, 
           LineBox[{{462.44843436199534`, 212.65977189113704`}, {
            462.44843436199534`, -48.49209302017107}}], 
           {Arrowheads[0.017139573075084253`], 
            ArrowBox[{{463.19086961780664`, 7.71608982841019}, {
             437.9480701030099, 7.71608982841019}}]}, 
           LineBox[{{435.72076426346894`, -3.525546740619575}, {
            435.72076426346894`, 242.92571650349572`}}], 
           LineBox[{{518.1310803264819, 212.65977189456925`}, {
            518.1310803264819, -81.35226144928754}}], 
           {Arrowheads[0.017139573075084253`], EdgeForm[{GrayLevel[0.], 
            Opacity[1.], AbsoluteThickness[1]}], EdgeForm[None], 
            ArrowBox[{{517.3886450466348, 7.71608982841019}, {
             477.2971399348989, 7.71608982841019}}]}, 
           LineBox[{{477.2971399348989, -2.660805466078841}, {
            477.2971399348989, 214.38925444365077`}}]},
          AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
          Axes->{True, True},
          AxesLabel->{None, None},
          AxesOrigin->{0., 0},
          DisplayFunction->Identity,
          Frame->{{False, False}, {False, False}},
          FrameLabel->{{None, None}, {None, None}},
          FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImagePadding->{{12.361345, 6.19946}, {0.5, 0.5}},
          ImageSize->{676.7142857142869, Automatic},
          
          Method->{
           "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& )}},
          
          PlotRange->{{-14.333333333333336`, 702.3333333333334}, {-298.908421,
            216.98163}},
          PlotRangeClipping->True,
          PlotRangePadding->Automatic,
          Ticks->{Automatic, Automatic}], "\[IndentingNewLine]", 
         "Inspiratory", " ", "bounds", "\[IndentingNewLine]", 
         GraphicsBox[{{}, {{}, {}, 
            {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
             0.006944444444444445], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1: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
Gd+H+7//B9ksoSs=
              "]]}, 
            {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
             0.006944444444444445], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1: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
/wB6XUGb
              "]]}}, 
           LineBox[{{462.44843436199534`, 212.65977189113704`}, {
            462.44843436199534`, -48.49209302017107}}], 
           {Arrowheads[0.017139573075084253`], 
            ArrowBox[{{461.8297382714205, -21.6130517330971}, {
             447.4759895277127, -21.6130517330971}}]}, 
           LineBox[{{446.60981503455776`, -242.12207674098954`}, {
            446.60981503455776`, 4.3291865031256975`}}], 
           LineBox[{{408.9002897789976, 55.11472093917541}, {
            408.9002897789976, -238.89731240468137`}}], 
           {Arrowheads[0.017139573075084253`], EdgeForm[{GrayLevel[0.], 
            Opacity[1.], AbsoluteThickness[1]}], EdgeForm[None], 
            ArrowBox[{{445.92924936136467`, -42.22271877631846}, {
             407.879441269208, -42.22271877631846}}]}},
          AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
          Axes->{True, True},
          AxesLabel->{None, None},
          AxesOrigin->{0., 0},
          DisplayFunction->Identity,
          Frame->{{False, False}, {False, False}},
          FrameLabel->{{None, None}, {None, None}},
          FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImagePadding->{{12.361345, 6.19946}, {0.5, 0.5}},
          ImageSize->{676.7142857142869, Automatic},
          
          Method->{
           "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& )}},
          
          PlotRange->{{-14.333333333333336`, 702.3333333333334}, {-298.908421,
            216.98163}},
          PlotRangeClipping->True,
          PlotRangePadding->Automatic,
          Ticks->{Automatic, Automatic}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "Schwelle"}], " ", "=", " ", 
        RowBox[{
         RowBox[{"1", " ", "bzw"}], " ", "-", 
         RowBox[{"1", " ", 
          RowBox[{"m", "/", "s"}]}]}]}], "\[IndentingNewLine]", "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Variablenbezeichnungen", " ", "f\[UDoubleDot]r", " ", "die", " ", 
         "Excel"}], "-", "Output", "-", "Datei"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"exportdata", "=."}], ";", "\[IndentingNewLine]", 
      RowBox[{"exportdata", "=", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
         "\"\<inspiratory and expiratory target volume [l]\>\"", ",", 
          "\"\<inspiratory volume [ml]\>\"", ",", 
          "\"\<expiratory volume [ml]\>\"", ",", 
          "\"\<equality % [V_expiratory/V_inspiratory / 100]\>\"", ",", 
          "\"\<accuracy variance % [d_exp = V_expiratory - V_target, d_insp = \
V_inspiratory - V_target; if d_exp = 0 and d_insp = 0 then  0, if d_insp < \
d_exp or d_exp < d_insp then maximum(|d_exp|, |d_insp|)/ V_target / 100, if \
(d_exp > 0 and d_insp < 0) or (d_insp > 0 and d_exp < 0) then (|d_exp| + \
|d_insp|)/ V_target / 100]\>\"", ",", "\"\<inspiratory (target) time [s]\>\"",
           ",", "\"\<expiratory (target) time [s]\>\"", ",", 
          "\"\<n breaths from HEPA tube before expiration in PExA\>\"", ",", 
          "\"\<volume of breaths before expiration in PExA [ml]\>\"", ",", 
          "\"\<invalid (0 no, 1 yes)\>\"", ",", "\"\<comment (German)\>\"", 
          ",", "\"\<particles > 0.31 - 0.38 \[Micro]m \[PlusMinus] \
CI[\[Sqrt](n+1)]\>\"", ",", " ", 
          "\"\<particles 0.38 - 0.45 \[Micro]m \[PlusMinus] \
CI[\[Sqrt](n+1)]\>\"", ",", " ", 
          "\"\<particles 0.45 - 0.56 \[Micro]m \[PlusMinus] \
CI[\[Sqrt](n+1)]\>\"", ",", " ", 
          "\"\<particles 0.56 - 0.70 \[Micro]m \[PlusMinus] \
CI[\[Sqrt](n+1)]\>\"", ",", " ", 
          "\"\<particles 0.70 - 0.94 \[Micro]m \[PlusMinus] \
CI[\[Sqrt](n+1)]\>\"", ",", " ", 
          "\"\<particles 0.94 - 1.15 \[Micro]m \[PlusMinus] \
CI[\[Sqrt](n+1)]\>\"", ",", " ", 
          "\"\<particles 1.15 - 1.28 \[Micro]m \[PlusMinus] \
CI[\[Sqrt](n+1)]\>\"", ",", " ", 
          "\"\<particles 1.28 - 1.38 \[Micro]m \[PlusMinus] \
CI[\[Sqrt](n+1)]\>\"", ",", " ", 
          "\"\<particles 1.38 - 1.47 \[Micro]m \[PlusMinus] \
CI[\[Sqrt](n+1)]\>\"", ",", " ", 
          "\"\<particles 1.47 - 1.57  \[Micro]m \[PlusMinus] CI[\[Sqrt](n+1)]\
\>\"", ",", " ", 
          "\"\<particles 1.57 - 1.69  \[Micro]m \[PlusMinus] CI[\[Sqrt](n+1)]\
\>\"", ",", " ", 
          "\"\<particles 1.69 - 1.89  \[Micro]m \[PlusMinus] CI[\[Sqrt](n+1)]\
\>\"", ",", " ", 
          "\"\<particles 1.89 - 2.16  \[Micro]m \[PlusMinus] CI[\[Sqrt](n+1)]\
\>\"", ",", " ", 
          "\"\<particles 2.16 - 2.52  \[Micro]m \[PlusMinus] CI[\[Sqrt](n+1)]\
\>\"", ",", " ", 
          "\"\<particles 2.52 - 3.42  \[Micro]m \[PlusMinus] CI[\[Sqrt](n+1)]\
\>\"", ",", " ", 
          "\"\<particles > 3.42  \[Micro]m \[PlusMinus] CI[\[Sqrt](n+1)]\>\"",
           ",", " ", 
          "\"\<sum all particles \[PlusMinus] CI[\[Sqrt](n+1)]\>\"", ",", 
          "\"\<signal-to-noise-ratio [n/(n+1)]\>\""}], "}"}], "}"}]}], ";", 
      "  ", "\[IndentingNewLine]", 
      RowBox[{"exportdataString", "=", "exportdata"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Variable", " ", "f\[UDoubleDot]r", " ", "die", " ", 
        "Messabschnitte"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"j", "=."}], ";", "\[IndentingNewLine]", 
      RowBox[{"j", "=", "0"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Schalter", " ", "f\[UDoubleDot]r", " ", 
        RowBox[{"Einschluss", "/", " ", "Ausschluss"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"incl", "=."}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", "Bildexport", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"tiffexport", "=."}], ";", "\[IndentingNewLine]", 
      RowBox[{"tiffexport", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Schleife", " ", "f\[UDoubleDot]r", " ", "die", " ", "Auswertung", " ",
         "der", " ", "einzelnen", " ", "Messaufgaben"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Clear", "[", 
            RowBox[{
            "particlesextract", ",", "extractex", ",", "extractins", ",", 
             "maxposextract", ",", "lbound", ",", "ubound", ",", 
             "uboundextract", ",", "bounds", ",", "volexp", ",", "volins", 
             ",", "lboundins", ",", "uboundins", ",", "boundsins", ",", 
             "extracttime"}], "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"expiratorische", " ", "Flussraten"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"extractex", "=", 
            RowBox[{
             RowBox[{"dataPEXA", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ";;", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"Maximum", " ", "Exp", " ", "Flow", " ", "Position"}], 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"maxposextract", "=", 
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{"extractex", ",", 
               RowBox[{"Max", "@", "extractex"}]}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", " ", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"inspiratorische", " ", "Flussraten"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"extractins", "=", 
            RowBox[{
             RowBox[{"dataPEXA", "[", 
              RowBox[{"[", "33", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ";;", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"elapsed", " ", "time"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"extracttime", "=", 
            RowBox[{
             RowBox[{"dataPEXA", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ";;", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
             "Spalte", " ", "4", " ", "ist", " ", "Deltatime", " ", "OPC"}], 
             ",", " ", 
             RowBox[{"5", "-", 
              RowBox[{
              "20", " ", "sind", " ", "die", " ", "Partikelklassen"}]}]}], 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"particlesextract", "=", 
            RowBox[{
             RowBox[{"dataPEXA", "[", 
              RowBox[{"[", 
               RowBox[{"4", ";;", "20"}], "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ";;", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"particlesextractsum", "=", 
            RowBox[{
             RowBox[{"dataPEXA", "[", 
              RowBox[{"[", "21", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ";;", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
             "f\[UDoubleDot]r", " ", "die", " ", "Berechnung", " ", "der", 
              " ", "Partikel", " ", "und", " ", "Flussraten", " ", "werden", 
              " ", "nur", " ", "Messbereiche", " ", "genommen"}], ",", " ", 
             RowBox[{
             "die", " ", "entweder", " ", "g\[UDoubleDot]ltig", " ", "sind", 
              " ", "oder", " ", "im", " ", "Kommentar", " ", "\"\<Equa\>\"", 
              " ", "oder", " ", "\"\<V \>\"", " ", 
              RowBox[{"(", 
               RowBox[{
               "\"\<Equality\>\"", " ", "oder", " ", "\"\<Volume\>\""}], 
               ")"}], " ", "enthalten"}]}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"j", "=", "0"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"j", "=", 
            RowBox[{"j", "+", "1"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"times", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", 
                  RowBox[{"-", "2"}]}], "]"}], "]"}], "==", "1"}], " ", "&&", 
              " ", 
              RowBox[{"StringContainsQ", "[", 
               RowBox[{
                RowBox[{"times", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", 
                   RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
                RowBox[{"\"\<Equa\>\"", "|", "\"\<V \>\""}]}], "]"}]}], ",", 
             RowBox[{"incl", "=", "True"}], ",", 
             RowBox[{
              RowBox[{"times", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", 
                 RowBox[{"-", "2"}]}], "]"}], "]"}], "==", "1"}], ",", 
             RowBox[{"incl", "=", "False"}], ",", 
             RowBox[{
              RowBox[{"times", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", 
                 RowBox[{"-", "2"}]}], "]"}], "]"}], "==", "0"}], ",", 
             RowBox[{"incl", "=", "True"}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "Nur", " ", "auszuwertende", " ", "Messbereiche", " ", "werden", 
             " ", "verarbeitet"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"incl", "==", "False"}], ",", "Nothing", ",", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{
                RowBox[{
                "die", " ", "expiratorische", " ", "Flussrate", " ", "muss", 
                 " ", "bei"}], " ", ">", " ", 
                RowBox[{"1", " ", 
                 RowBox[{"m", "/", "s"}], " ", "liegen"}]}], ",", " ", 
               RowBox[{
               "sonst", " ", "kann", " ", "keine", " ", "Berechnung", " ", 
                "der", " ", "Volumina", " ", "und", " ", "Partikel", " ", 
                "erfolgen"}]}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Max", "@", "extractex"}], ">", "1"}], ",", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                "zun\[ADoubleDot]chst", " ", "Bestimmung", " ", "der", " ", 
                 "Grenzen", " ", "f\[UDoubleDot]r", " ", "expiratory", " ", 
                 "flow", " ", "rate"}], "*)"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"lowerbound", ":", " ", 
                 RowBox[{
                  RowBox[{
                  "Start", " ", "der", " ", "Expiration", " ", "ist", " ", 
                   "eine", " ", "Flowrate"}], " ", ">", " ", 
                  RowBox[{"1", " ", 
                   RowBox[{"m", "/", "s"}]}]}]}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"lbound", "=", 
                 RowBox[{"maxposextract", "-", 
                  RowBox[{"FirstPosition", "[", 
                   RowBox[{
                    RowBox[{"Reverse", "[", 
                    RowBox[{"extractex", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", "maxposextract"}], "]"}], "]"}], "]"}],
                     ",", 
                    RowBox[{"i_", "/;", 
                    RowBox[{"i", "<=", "1"}]}]}], "]"}]}]}], " ", ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{"upperbound", ":", " ", 
                  RowBox[{
                   RowBox[{
                   "wird", " ", "r\[UDoubleDot]ckw\[ADoubleDot]rts", " ", 
                    "von", " ", "5", " ", "Sekunden", " ", "nach", " ", 
                    "Max"}], "-", 
                   RowBox[{"Expiratory", " ", "flow", " ", "rate", " ", 
                    RowBox[{"bzw", ".", " ", "wenn"}], " ", "kleiner", " ", 
                    "vom", " ", "Ende", " ", "her", " ", "gesucht"}]}]}], 
                 "*)"}], "\[IndentingNewLine]", 
                RowBox[{"uboundextract", "=", 
                 RowBox[{"extractex", "[", 
                  RowBox[{"[", 
                   RowBox[{"maxposextract", ";;", 
                    RowBox[{"(", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"maxposextract", "+", "50"}], "<", 
                    RowBox[{"Length", "@", "extractex"}]}], ",", 
                    RowBox[{"maxposextract", "+", "50"}], ",", 
                    RowBox[{"Length", "@", "extractex"}]}], "]"}], ")"}]}], 
                   "]"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
                RowBox[{"ubound", "=", 
                 RowBox[{"maxposextract", "+", 
                  RowBox[{"Length", "@", "uboundextract"}], "-", 
                  RowBox[{"FirstPosition", "[", 
                   RowBox[{
                    RowBox[{"Reverse", "@", "uboundextract"}], ",", 
                    RowBox[{"i_", "/;", 
                    RowBox[{"i", ">=", "1"}]}]}], "]"}]}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"bounds", "=", 
                 RowBox[{"Flatten", "@", 
                  RowBox[{"{", 
                   RowBox[{"lbound", ",", "ubound"}], "}"}]}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{"expiratorisches", " ", "Volumen"}], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"volexp", "=", 
                 RowBox[{
                  RowBox[{"Total", "[", 
                   RowBox[{"extractex", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"bounds", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ";;", 
                    RowBox[{"bounds", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "]"}], 
                  RowBox[{"1", "/", "10"}]}]}], " ", ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                 "Bestimmung", " ", "der", " ", "Grenzen", " ", "der", " ", 
                  "inspiratory", " ", "flow", " ", "rate"}], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"extractins", "[", 
                 RowBox[{"[", "maxposextract", "]"}], "]"}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"uboundins", "=", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"extractins", "[", 
                    RowBox[{"[", "maxposextract", "]"}], "]"}], "<=", 
                    RowBox[{"-", "1"}]}], ",", 
                   RowBox[{"maxposextract", "+", 
                    RowBox[{"FirstPosition", "[", 
                    RowBox[{
                    RowBox[{"extractins", "[", 
                    RowBox[{"[", 
                    RowBox[{"maxposextract", ";;", 
                    RowBox[{"Length", "@", "extractins"}]}], "]"}], "]"}], 
                    ",", 
                    RowBox[{"i_", "/;", 
                    RowBox[{"i", ">=", 
                    RowBox[{"-", "1"}]}]}]}], "]"}]}], " ", ",", 
                   RowBox[{"maxposextract", "-", 
                    RowBox[{"FirstPosition", "[", 
                    RowBox[{
                    RowBox[{"Reverse", "[", 
                    RowBox[{"extractins", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", "maxposextract"}], "]"}], "]"}], "]"}],
                     ",", 
                    RowBox[{"i_", "/;", 
                    RowBox[{"i", "<=", 
                    RowBox[{"-", "1"}]}]}]}], "]"}]}]}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"uboundins", "==", "\"\<NotFound\>\""}], ",", 
                  RowBox[{"uboundins", "=", "0"}], ",", 
                  RowBox[{"uboundins", "=", "uboundins"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"lboundins", "=", " ", 
                 RowBox[{
                  RowBox[{"uboundins", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", 
                  RowBox[{"FirstPosition", "[", 
                   RowBox[{
                    RowBox[{"Reverse", "[", 
                    RowBox[{"extractins", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", 
                    RowBox[{"uboundins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "]"}], 
                    ",", 
                    RowBox[{"i_", "/;", 
                    RowBox[{"i", ">=", 
                    RowBox[{"-", "1"}]}]}]}], "]"}]}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"boundsins", "=", 
                 RowBox[{"Flatten", "@", 
                  RowBox[{"{", 
                   RowBox[{"lboundins", ",", "uboundins"}], "}"}]}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{"inspiratorisches", " ", "Volumen"}], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"volins", "=", 
                 RowBox[{
                  RowBox[{"Abs", "@", 
                   RowBox[{"Total", "[", 
                    RowBox[{"extractins", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ";;", 
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "]"}]}], 
                  RowBox[{"1", "/", "10"}]}]}], " ", ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                 "Das", " ", "inspiratorische", " ", "Volumen", " ", "muss", 
                  " ", "mindestens", " ", "300", " ", "ml", " ", "betragen"}],
                  "*)"}], "\[IndentingNewLine]", 
                RowBox[{"Until", "[", 
                 RowBox[{
                  RowBox[{"volins", ">", "300"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"lboundins", "=", 
                    RowBox[{
                    RowBox[{"lboundins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", 
                    RowBox[{"FirstPosition", "[", 
                    RowBox[{
                    RowBox[{"Reverse", "[", 
                    RowBox[{"extractins", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", 
                    RowBox[{"lboundins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "]"}], 
                    ",", 
                    RowBox[{"i_", "/;", 
                    RowBox[{"i", ">=", 
                    RowBox[{"-", "1"}]}]}]}], "]"}]}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"boundsins", "=", 
                    RowBox[{"Flatten", "@", 
                    RowBox[{"{", 
                    RowBox[{"lboundins", ",", "uboundins"}], "}"}]}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"volins", "=", 
                    RowBox[{
                    RowBox[{"Abs", "@", 
                    RowBox[{"Total", "[", 
                    RowBox[{"extractins", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ";;", 
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "]"}]}], 
                    RowBox[{"1", "/", "10"}]}]}]}]}], " ", 
                 RowBox[{"(*", 
                  RowBox[{"inspiratorisches", " ", "Volumen"}], "*)"}], 
                 "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{"Berechnung", " ", "der", " ", "Zeiten"}], "*)"}], 
                "\[IndentingNewLine]", " ", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{
                  "die", " ", "Flow", " ", "meter", " ", "waren", " ", "vom", 
                   " ", "Hersteller", " ", 
                   RowBox[{"(", "PExA", ")"}], " ", "mit", " ", "10", " ", 
                   RowBox[{"Messwerten", "/", "sec"}], " ", "zu", " ", 
                   "schwach", " ", 
                   RowBox[{"eingestellt", ".", " ", "d", ".", "h", "."}]}], 
                  ",", " ", 
                  RowBox[{
                  "die", " ", "Atemvolumina", " ", "sind", " ", "zwar", " ", 
                   "korrekt"}], ",", " ", 
                  RowBox[{
                   RowBox[{
                   "aber", " ", "die", " ", "zeitliche", " ", 
                    "Aufl\[ODoubleDot]sung", " ", "ist", " ", "es", " ", 
                    RowBox[{"nicht", ".", " ", "F\[UDoubleDot]r"}], " ", 
                    "das", " ", "folgende", " ", "Pexa"}], "-", 
                   RowBox[{
                   "Update", " ", "wurde", " ", "eine", " ", 
                    "Aufl\[ODoubleDot]sung", " ", "von", " ", 
                    RowBox[{"100", "/", "sec"}], " ", 
                    RowBox[{
                    "angek\[UDoubleDot]ndigt", ".", " ", "Versuche"}]}]}], 
                  ",", " ", 
                  RowBox[{
                  "die", " ", "schlechte", " ", "zeitliche", " ", 
                   "Aufl\[ODoubleDot]sung", " ", "zu", " ", "korrigieren"}], 
                  ",", " ", 
                  RowBox[{"sind", " ", 
                   RowBox[{"gescheitert", "."}]}]}], "*)"}], 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{"Berechnung", " ", "Partikelsummenwerte"}], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"particles", "=."}], ";", "\[IndentingNewLine]", 
                RowBox[{"particles", "=", 
                 RowBox[{"particlesextract", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", 
                    RowBox[{
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ";;", 
                    RowBox[{"-", "1"}]}]}], "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"particles", "=", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"Total", "[", 
                    RowBox[{
                    RowBox[{"particles", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"particles", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "*", "0.25"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", "2", ",", 
                    RowBox[{"Length", "@", "particles"}]}], "}"}]}], "]"}]}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"particles", ",", 
                  RowBox[{"Total", "@", "particles"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"particlesCI", "=", 
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"#", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"#", ">", "0"}], ",", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"#", "+", "1"}], "]"}], ",", "Null"}], "]"}]}], 
                    "}"}], "&"}], ",", "particles", ",", 
                   RowBox[{"{", "1", "}"}]}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"particlesCISNR", "=", 
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "/", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "&"}], ",", 
                   "particlesCI", ",", 
                   RowBox[{"{", "1", "}"}]}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"particlesCIString", "=", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Map", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "=!=", "Null"}], ",", 
                    RowBox[{
                    RowBox[{"ToString", "@", 
                    RowBox[{"Floor", "@", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "~~", 
                    "\"\<\[PlusMinus]\>\"", "~~", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Floor", "@", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
                    RowBox[{"ToString", "@", 
                    RowBox[{"Floor", "@", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}]}], "]"}], "}"}], "&"}],
                     ",", "particlesCI", ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Around", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"#", "+", "1"}], "]"}]}], "]"}], "&"}], "@", " ", 
                    "erg\[ADoubleDot]nzen"}], ",", " ", 
                    RowBox[{
                    RowBox[{
                    "funktioniert", " ", "noch", " ", "nicht", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"particles", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "ist", " ", 
                    "delta"}], "-", "OPC", "-", 
                    RowBox[{"time", " ", "in", " ", "sec", " ", "*", " ", 
                    RowBox[{"particles", "/", "l"}], " ", "*", "  ", ".25", 
                    " ", 
                    RowBox[{"l", "/", "sec"}], " ", "ist", " ", "das", " ", 
                    "Messvolumen", " ", "von", " ", "PExA"}]}]}], ")"}], " ", 
                  "=", " ", 
                  RowBox[{
                   RowBox[{
                   "particles", " ", "per", " ", "breath", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"Z\[ADoubleDot]hlratenstatistik", ":", " ", 
                    RowBox[{
                    GraphicsBox[
                    TagBox[RasterBox[CompressedData["
1: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
3+0SQVFuea4oHOjttWqJL2C38Ipkm7yiPtlqSuq0V9jcF1ikaPvdwHCvpvom
AhI/ymLDkxPdU9WS1BkvwKQOQVoEOlXHTppR77y0uM3wqkwPky9POG7P1N0X
lcqLu/mBtGr7kU/ltX/l4iXHyX6wRv75uhIdJS+qwy11hxwyNHQzL8wC8yFj
Ufr9bGrAMSQuLxz5gD+5/XTeL3E7+BehMGcFzdLmCUx7LB6uAI6HdfLDeeP3
2PHatMrp6pPNOq9Q7PGXLrSa6zUndQfTQPGGwyaniy2MS0ETVGh1qo3u+ZMx
qUOQFoC804SZf/OzPJ6ea0/8Y7vrM2dS/m+prsk7C7pA+W83BsQy4kL29orj
7filsEOOcYBTj06NrP7Ax5DEy371v5+kWVplMwvlQxJ2ZRzMMx2Wq4N1m0uT
GsjasvohCasyDtYbWsIhEQQhkBQriTeSWTh/2q3GXSckjcSc7pBjut2v70Vd
RlpkDEn6Yol6c4LmaTXO6mpNXZrc4/parabpGiBa0xoYG3OtuVlzJnCTStAC
DokgiMePM521JVm1JXUkpzs79yx5dUjrYOr6YJR5nM83Z6hpnTGk/tk3e5qp
1VCjteZ0ze5xFfv6EH0zGxik1DXPtwX5ZiF/YB7ROg6JIMje7s2cW8tnu2qJ
qWRjnnvxq7L5TKR1MYZwcYfdvguwr+xXctFcrYYb92tLUZvd46rq9nVyqqkN
DJ9YqbH0YI/dAU7WtZZDIghSE9XyK/b5BwTZL3AMaQINf7gWsaf2lwK1BOiQ
CIIgSK2wT+bhUNIwDmZfHEI4+H1xNYGeiCAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiDI
IaC89e3y6sPdAyzgKHD0lXAALayUisvX8/nFYqmyn9XCPL+/vLz2tHrQYhwr
atS59WVHwrbRMI8wR398QRrI43y34wwX1Ad//G1vR/aXt8s1F9A6lFf+qqPj
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
WS4fDIvVRQcsqOucJ+VXnbkwwQPq7z1OGafJkHH/c9qV2pY/C+W4nCdzWE4M
TMrTEJwZ0hl3nMzzxgNxNRu0LTmhJ0MFpQS82beZ4zER56ruculEdVpMF7uL
ak20M42G5GpRfVpQJ8+rY7MZn+rMGdRlby6O3MuZa4flxKfj0VsgDAvdJWEd
2FC/aK/eenOoGKZYTLayBnWurOV59Mh0mKh/3v7j1GvBM5Ty5p9y78/VbTpy
0vkzMfksUv/KmFRn1y0mP4fOfPTMsHr8JJL1LGCo36znIGNp5zm64g3YfnRl
WS7590+NI/TRPVjr7Vd/pDf+ChMRXKqPTpgTYjx4cFDlH6nL8HINy98lF2uD
1QcsqOs892S40LOnLiZ2tjUmN0NQ5/OuF68ZOgZTXtNH6rLPq0/s2Hhzp3Nf
O2sFJW91xCbkZN2mP6qS6X6kc58p5RKO8oltK8eBek3tSHTekTo1S6lB3c7c
fnWN1GVoLs7c+9qb38+fKxf01+ppC90lYe3BlOTKO6oX7oa3ufSMmUbqLFnL
3KYi+mESaxeDlcszlXH5ujJtlr6j4F05yXf7NaXrTlvdfRJxngW2YvWb9Rxk
KO18R5e7AScqN9yH++pI7a9jCQy+atjn1Mm72LE3Sma5/RoyHjw4eESj0O5H
uI7HxHQIC3mUKn/XWn8iRuXl6soE7faqeBwsmh8hj5Nw/CKYgZIjqLNOGnOu
q0+y8WdIdR/UlatLr8L0K3lLTMlwpC5Ov4kTG5iTs+vMK6uD+61WW11svLLL
1RBcGVLYdhyvL/1z++E7yq2N7MnQm0yebSZadqwdqFz7TCsXf/7P5cujWlwd
H3CzJNpdQ3LPygSijaULg/Y7vIkC0FpZ+9WTe4YHjjpyBnVZm4sj961W58aR
2LI8bRoXukvC0jNpydXLWc6N1YM6tRIcWcvcpiyHSaxdHPnFF+sv/5acP+Eo
eFdOMgR1yhGa0nUbV3edROybUtJlrN+s5yDDQZ7v6Eo0YOvRpdH7683VlSdK
AC7H42xXWvIe7ODgoDWoSz5uZZgNYsi++TjBgeW/OHt8ul6fvLrYeZOFpf/3
z2GlY5WZOf99iBOHy6ZXVMr2Kf6uPjNTF7MB/Hbkr14cOnllzltZLFdm+EYr
XWw0rpwcKg2dGDuUMajzX5/9+pm6l4sbiVeauNeVDzOKJDUaF4+VSidObGOk
bnBoqCQKp9GYHteej/Ifnho6Od0Q908a9crxgZ99+MK40bjYROD4TQHrqsp2
70+Vgl2LZ/Asj23lawiODCmsO47Vl/JIonigdKBUyjiUGlXe3Fy8yeTZ5pba
+OaS7UDj2GdqucgzkkcbK1XDb0eiU2rIjxlEBhYWGtPiPaXKUztpQZ0ciohO
d+qDOEZ5g7qMzcWeey99QacjvggeMDUuTCsJS8+kJldWsH+r02u2XiqKSsYS
leDIWtY2ZTlM1ErauHv+NeVJdzHnPnyTh6PgXTlxB3WJHtXddcdlOInYNqXc
FjbXb9ZzUPIgz3d0JRuwrU1p9P5aHFjiNTOT4bQ4Zb1kAmXMV3AEdf4DGkos
bZ0jqqxqO05wYLVf/fGDyvjwyMS0/yoh8QOFtY+/jb6Pfxbv66mL2wDeKpP1
xudPLO/raa3flXcLhscrM8ozP+3nXzbqwfJ6/GU//ruAwlXEnsNXfKSlqvV0
fnpixFvxg+SMgdR15UuTRAmI9IjfRAy/FP9XXjIS/+1G9U+3/NS+CHIwMnFl
Xh/rEOUxOTEiM16bmVsOiySemgTR24TTMAQ/lisUUk68ynbF26qiupi3VVje
hmDLkLZJ247j9SVqfjqqhNU79WhPKcloP18KbkrFm0yObfo2Hip/rrWDeLbs
+0wrF/9nGfQX1WupsSc6vYY2ns77e/aOzBntNWIphRh7Td2L5nX374LGjgvj
svjnDM3FkXvxgrFpP2vT0W8lGRemlMSWpWfSkhv+hfyDV16VKRmJV4I7a5na
lOUwUSpJPEkRRgPtzb+tf/3OaBQ5OAvenhNTHWqllOhRnV23LvUkYt+Uki5r
/WY6B5kO8jxHV7yAnG1K3a/eX4tMRGnV1jP9FPDGgw9qtXrUspJ5kMfmjZV/
+J/sr6lTV7UfJwD2g5hgb/sxGGDb5HusmGjTu8R13NHfPO0skG9X4i5ab9q7
/lqM21l//BVAz+Kki10kZ+Fz0dDD5Dsp/LcLy3cmXxn3Pp7+ZO9/IBVZ7FV/
LWK61J9sBtCL1rQbBcDO+b+V/0rcBUKP6dyhTZlEgV6wJ/31+ufvOCdJAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwIKw1RguFwmhjbatZLRSC/wIA
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
fbYnXdxi9BIntme4wfji48rwyC/vK+NTLz45O3z06rJMy5N5mcZioVQembiy
9DxKi9rDiFve3r6jDcQ/t9bvXho3bUQWwVH/i7Ozj3d0jCwlmlOykamjNdaW
o3xkdSw/X7p03FvlqCyM+CJR8sP/tmQs+UQio3yI2pRVKCYViD17uxbV6hV4
cklibUdlaKK9bPnVef7TF17CxXql8vjF36+2o7/qtKwzHz0L9+AVilgud9E5
TkylomxcNNuh8Sui2YpmfFTu65Kawtb6Fw15AOpHmrmBq1lIO6xcB73SBtIO
h4eif/BSEk+3Y+/2Y8dcmxFXZT+05SVbTxUWiDEzljrYCqty1dv3Ya+HPP/p
/xhTGKsW02EV66+zdq/5O1R7y/aZ+/suTh/myjL0EbYmZmziYqtKs7Afd5lb
ONCD0oO6jWa1XCifbny9/vLld3enXi8Wx2bDU57oE8vlcunYpbnFxYV3T5cL
xVO3glsFweShKe+bxcW5S8dKwZnStT27F7dOFb213l1YFDt6c6jop09uTOzk
3qNHyzIBhfJUGHHFL9W0z/ak//DnxcWrbxQKhyZviKSvxM7jf3n3SKF47rMo
thClFXy+PzVw+Oy7C8vfvVx/NO/lrHDk3b8Y9h0vc+1ze7UxVvRydPe7ly/X
v2546YoyJPZcPjcvvng0f+WXnybuDgeBWbAt/ZOVSFl6NKf88fn/XF5cvPdo
/eXfW7Y/s9RWSvl41SGqcqFR//hb0yJjyVebiTArUc/yw+bqnxZvTB4qFN64
Kqr13tON5JL42o7KsO9SJGvQa1lDb4r8z4l8li8vi1TqLetPq5vBHmRRLT96
dE/+cfL4Ukol2viF33pF+6sx8edvni77Zf3bc17775Tps9kTA8cvzYmq+u4L
2cL9wjM3cDULqYeV7aDXpFR3sVj0t+Gnu7MD197tx465NiP2yo7SEc9L1p5K
K5DF314YKnbSa6uDTjspirqbm3nv3vepzdFyWGllkjXR3XSo9pa9Ze3vuzp9
2Csr1kfYmpixiavl5DzuMrdwoAeFZ/6EsJMQZ9LBtx9EZ87H1w515gTJPnGs
EV6uvbjpHUenbsnLSjnD942bnUOhtbnZTtuelZjjqq7V3txsBRsrVm53um+x
IExBelBnSbph1XiR6V2zKbLYai9dULaYNajb/OxcUS22zduVcCv/+8npQuHC
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
AAAAAAAAAADoO/8PPeNa3A==
                    "], {{0, 252.71841019872517`}, {629.1713535808025, 0}}, {
                    0, 255},
                    ColorFunction->RGBColor,
                    ImageResolution->{96.012, 96.012},
                    SmoothingQuality->"High"],
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True],
                    Selectable->False],
                    DefaultBaseStyle->"ImageGraphics",
                    ImageSize->{269.99999999999744`, Automatic},
                    ImageSizeRaw->{629.1713535808025, 252.71841019872517`},
                    
                    PlotRange->{{0, 629.1713535808025}, {
                    0, 252.71841019872517`}}], "\[IndentingNewLine]", 
                    "https"}], ":"}]}], "//", 
                   RowBox[{"static", "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"content", ".", "springer", ".", "com"}], "/", 
                    "esm"}], "/", "art"}], "%3", "A10", ".1038", "%2", 
                    "Fs41598"}], "-", "022", "-", "12529", "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"2", "/", "MediaObjects"}], "/", "41598"}], "_", 
                    "2022", "_", "12529", "_MOESM1", 
                    RowBox[{"_ESM", ".", "pdf"}]}]}]}]}], "*)"}], 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                 "f\[UDoubleDot]r", " ", "die", " ", "graphische", " ", 
                  "Darstellung", " ", "der", " ", "Integrale", " ", "werden", 
                  " ", "Hilfslinien", " ", "berechnet"}], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"areaparticles", "=."}], ";", "\[IndentingNewLine]", 
                RowBox[{"areaparticles", "=", 
                 RowBox[{"Flatten", "@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"Null", ",", 
                    RowBox[{
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"Length", "@", "particlesextractsum"}], "-", 
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], "}"}]}]}], 
                ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                 "graphische", " ", "Darstellung", " ", "des", " ", 
                  "Partikelkonzentrationsverlaufs"}], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"graphparticles", "=."}], ";", "\[IndentingNewLine]", 
                RowBox[{"graphparticles", "=", 
                 RowBox[{"Labeled", "[", 
                  RowBox[{
                   RowBox[{"ListLinePlot", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"particlesextractsum", ",", "areaparticles"}], 
                    "}"}], ",", 
                    RowBox[{"ImageSize", "->", "Large"}], ",", 
                    RowBox[{"GridLines", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"Length", "@", "particlesextractsum"}]}], "}"}], 
                    ",", "None"}], "}"}]}], ",", 
                    RowBox[{"AxesLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<time in 1/10 s\>\"", ",", "\"\<counts/l\>\""}], 
                    "}"}]}], ",", 
                    RowBox[{"LabelStyle", "->", 
                    RowBox[{"Directive", "[", "Black", "]"}]}], ",", 
                    RowBox[{"Filling", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", "\[Rule]", 
                    RowBox[{"{", "2", "}"}]}], "}"}]}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> GrayLevel[0.51]|>,
                    "GrayLevelColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> GrayLevel[0.51]|>,
                    "GrayLevelColorSwatchTemplate"]}], "}"}]}]}], "]"}], ",", 
                   RowBox[{"\"\<Total Particle Count \>\"", "~~", 
                    RowBox[{"ToString", "@", 
                    RowBox[{"Round", "@", 
                    RowBox[{"particlesCISNR", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}]}], "~~", 
                    "\"\< \[PlusMinus] \>\"", "~~", 
                    RowBox[{"ToString", "@", 
                    RowBox[{"Round", "@", 
                    RowBox[{"particlesCISNR", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}]}]}], ",", 
                   "Top", ",", 
                   RowBox[{"ImageMargins", " ", "->", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.3", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}]}], "]"}]}], ";",
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                 "Erstellung", " ", "von", " ", "graphischen", " ", "Listen", 
                  " ", "zum", " ", "Anzeigen", " ", "der", " ", "Area", " ", 
                  "under", " ", "the", " ", "curve", " ", "als", " ", 
                  "Integralabschnitt"}], "*)"}], "\[IndentingNewLine]", 
                RowBox[{"areains", "=."}], ";", "\[IndentingNewLine]", 
                RowBox[{"areains", "=", 
                 RowBox[{"Flatten", "@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"Null", ",", 
                    RowBox[{
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "-", 
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{"Null", ",", 
                    RowBox[{
                    RowBox[{"Length", "@", "extractins"}], "-", " ", 
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], "}"}]}]}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"areaexp", "=."}], ";", "\[IndentingNewLine]", 
                RowBox[{"areaexp", "=", 
                 RowBox[{"Flatten", "@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"Null", ",", 
                    RowBox[{
                    RowBox[{"bounds", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"bounds", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "-", 
                    RowBox[{"bounds", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{"Null", ",", 
                    RowBox[{
                    RowBox[{"Length", "@", "extractex"}], "-", " ", 
                    RowBox[{"bounds", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], "}"}]}]}], 
                ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{
                  "Erstellung", " ", "von", " ", "Linien", " ", "zum", " ", 
                   "Anzeigen", " ", "der", " ", "Expirationszeit", " ", "ist",
                    " ", "nicht", " ", "m\[ODoubleDot]glich"}], ",", " ", 
                  RowBox[{
                  "da", " ", "die", " ", "flow", " ", "meter", " ", "eine", 
                   " ", "zugeringe", " ", "zeitliche", " ", 
                   "Aufl\[ODoubleDot]sung", " ", "hatten"}]}], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"linetexpreal", "=."}], ";", "\[IndentingNewLine]", 
                  RowBox[{"linetexpreal", "=", 
                   RowBox[{"Flatten", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"Null", ",", 
                    RowBox[{"posstartexp", "+", 
                    RowBox[{"bounds", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{"10", ",", 
                    RowBox[{"posendexp", "-", "posstartexp"}]}], "]"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{"Null", ",", 
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"extractex", "-", " ", "posendexp"}], "]"}], "+", 
                    "16"}]}], "]"}]}], "}"}]}]}], ";"}], 
                 "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{
                  "Berechnung", " ", "der", " ", "G\[UDoubleDot]te", " ", 
                   "von", " ", "geatmeten", " ", 
                   RowBox[{"Volumina", ":", " ", 
                    RowBox[{"Equality", " ", "in", " ", "%"}]}]}], ",", " ", 
                  RowBox[{
                  "Accuracy", " ", "Variance", " ", "in", " ", "%"}]}], 
                 "*)"}], "\[IndentingNewLine]", 
                RowBox[{"equ", "=."}], ";", "\[IndentingNewLine]", 
                RowBox[{"equ", "=", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"volexp", "/", "volins"}], ")"}], "*", "100"}]}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"vtarget", "=."}], ";", "\[IndentingNewLine]", 
                RowBox[{"vtarget", "=", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"NumberQ", "[", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "3"}], "]"}], "]"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"times", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "3"}], "]"}], "]"}], "*", "1000"}], ",", 
                   RowBox[{"times", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "3"}], "]"}], "]"}]}], "]"}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"Clear", "[", 
                 RowBox[{"acc", ",", "dexp", ",", "dinsp"}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"acc", "=", "0"}], ";", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"NumberQ", "[", "vtarget", "]"}], ",", 
                  RowBox[{
                   RowBox[{"dexp", " ", "=", " ", 
                    RowBox[{"volexp", " ", "-", "vtarget"}]}], ";", 
                   RowBox[{"dinsp", " ", "=", " ", 
                    RowBox[{"volins", " ", "-", "vtarget"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"dexp", "==", "0"}], "&&", " ", 
                    RowBox[{"dinsp", "==", "0"}]}], ")"}], ",", 
                    RowBox[{"acc", "=", "0"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"dinsp", "<", "dexp"}], ")"}], "||", 
                    RowBox[{"(", 
                    RowBox[{"dexp", "<", "dinsp"}], ")"}]}], ",", 
                    RowBox[{"acc", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Max", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Abs", "@", "dinsp"}], ",", 
                    RowBox[{"Abs", "@", "dexp"}]}], "}"}]}], "/", "vtarget"}],
                     "*", "100"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"dexp", ">", "0"}], " ", "&&", " ", 
                    RowBox[{"dinsp", "<", "0"}]}], " ", ")"}], "||", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"dinsp", ">", "0"}], " ", "&&", " ", 
                    RowBox[{"dexp", "<", "0"}]}], " ", ")"}]}], ",", 
                    RowBox[{"acc", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Abs", "@", "dexp"}], "+", 
                    RowBox[{"Abs", "@", "dinsp"}]}], ")"}], "/", "vtarget"}], 
                    "*", "100"}]}]}], "]"}]}], ",", "vtarget"}], "]"}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                 "graphische", " ", "Darstellung", " ", "der", " ", 
                  "Flussraten"}], "*)"}], "\[IndentingNewLine]", 
                RowBox[{"graphflow", "=."}], ";", "\[IndentingNewLine]", 
                RowBox[{"graphflow", "=", 
                 RowBox[{"Labeled", "[", 
                  RowBox[{
                   RowBox[{"ListLinePlot", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "extractins", ",", "areains", ",", "extractex", ",", 
                    "areaexp", ",", 
                    RowBox[{"Legended", "[", 
                    RowBox[{
                    "extractins", ",", "\"\<inspiratory flow rate\>\""}], 
                    "]"}], ",", 
                    RowBox[{"Legended", "[", 
                    RowBox[{
                    "extractex", ",", "\"\<expiratory flow rate\>\""}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"Filling", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "\[Rule]", 
                    RowBox[{"{", "2", "}"}]}], ",", 
                    RowBox[{"4", "->", 
                    RowBox[{"{", "3", "}"}]}]}], "}"}]}], ",", 
                    RowBox[{"AxesLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"\<time in 1/10 s\>\"", ",", "\"\<ml/s\>\""}], 
                    "}"}]}], ",", 
                    RowBox[{"LabelStyle", "->", 
                    RowBox[{"Directive", "[", "Black", "]"}]}], ",", 
                    RowBox[{"PlotStyle", "->", 
                    RowBox[{
                    RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", "4"}], "]"}], "]"}]}], ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"GridLines", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", "maxposextract", "}"}], ",", "uboundins", 
                    ",", "lboundins"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"extractex", "[", 
                    RowBox[{"[", 
                    RowBox[{"bounds", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
                    RowBox[{"extractex", "[", 
                    RowBox[{"[", 
                    RowBox[{"bounds", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], "}"}]}], 
                    "}"}]}], ","}], "*)"}], 
                    RowBox[{"PlotRange", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Min", "@", "extractins"}], ",", 
                    RowBox[{"Max", "@", "extractex"}]}], "}"}]}], "}"}]}], 
                    ",", 
                    RowBox[{"ImageSize", "->", "Large"}]}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<valid \>\"", "~~", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"times", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0", "->", "\"\<yes\>\""}], ",", 
                    RowBox[{"1", "->", "\"\<no\>\""}]}], "}"}]}], ")"}], 
                    "~~", "\"\<\\ninspiratory volume ml \>\"", " ", "~~", 
                    RowBox[{"ToString", "@", 
                    RowBox[{"Round", "@", "volins"}]}], "  ", "~~", " ", 
                    "\"\<\\nexpiratory volume ml \>\"", "~~", 
                    RowBox[{"ToString", "@", 
                    RowBox[{"Round", "@", "volexp"}]}], "~~", 
                    "\"\<\\nV_target l \>\"", "~~", 
                    RowBox[{"ToString", "@", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "3"}], "]"}], "]"}]}], "~~", 
                    "\"\<\\nt_insp s \>\"", "~~", 
                    RowBox[{"ToString", "@", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "4"}], "]"}], "]"}]}], " ", "~~", 
                    "\"\<\\nt_exp s 3\>\"", "~~", 
                    "\"\<\\nequality_V_exp/insp % \>\"", "~~", 
                    RowBox[{"ToString", "@", 
                    RowBox[{"Round", "[", "equ", "]"}]}], "~~", 
                    "\"\<\\naccuracy_variance_V_to_V_target % \>\"", "~~", 
                    RowBox[{"ToString", "@", 
                    RowBox[{"Round", "[", "acc", "]"}]}]}], ",", 
                    "\"\<PExA's flow meter default configurations were for \
time resolution 10/s\\nand thus too small, i.e., a distorted flow meter \
signal\>\""}], "}"}], "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{"~~", "\"\<\\nmax flow insp ml/s \>\"", "~~", " ", 
                    RowBox[{"ToString", "@", 
                    RowBox[{"Round", "@", "maxflowin"}]}], "~~", 
                    "\"\<\\nmax flow exp ml/s \>\"", "~~", " ", 
                    RowBox[{"ToString", "@", 
                    RowBox[{"Round", "@", "maxflowex"}]}]}], "*)"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"Top", ",", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"exportdataString", ",", 
                  RowBox[{"Flatten", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "vtarget", ",", "volins", ",", "volexp", ",", "equ", ",", 
                    "acc", ",", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "4"}], "]"}], "]"}], ",", "3", ",", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "5"}], "]"}], "]"}], ",", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "6"}], "]"}], "]"}], ",", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "]"}], ",", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
                    "particlesCISNR"}], "}"}], ",", "1"}], "]"}]}], "]"}], 
                ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"exportdata", ",", 
                  RowBox[{"Flatten", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    "vtarget", ",", "volins", ",", "volexp", ",", "equ", ",", 
                    "acc", ",", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "4"}], "]"}], "]"}], ",", "3", ",", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "5"}], "]"}], "]"}], ",", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "6"}], "]"}], "]"}], ",", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "]"}], ",", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
                    "particlesCIString"}], "}"}], "]"}]}], "]"}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"tiffexport", ",", "\[IndentingNewLine]", 
                  RowBox[{"GraphicsGrid", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "graphflow", "}"}], ",", 
                    RowBox[{"{", "graphparticles", "}"}]}], "}"}], ",", 
                    RowBox[{"ImageSize", "->", "800"}], ",", 
                    RowBox[{"ItemAspectRatio", "->", ".7"}], ",", 
                    RowBox[{"Frame", "->", "True"}], ",", " ", 
                    RowBox[{"Alignment", "->", "Left"}]}], "]"}]}], "]"}], 
                ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
               "Nothing"}], "]"}]}], 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"max", " ", "ex", " ", "flow"}], " ", ">", " ", "1"}], 
             "*)"}], "]"}]}], 
          RowBox[{"(*", 
           RowBox[{"incl", " ", "==", " ", "True"}], "*)"}], ")"}], "&"}], 
        ",", "positions"}], "]"}], " ", 
      RowBox[{"(*", 
       RowBox[{"Map", " ", "auf", " ", "einzelne", " ", 
        RowBox[{"Aufgabe", "/", "Positions"}]}], "*)"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Export", " ", "als", " ", "svg", " ", "und", " ", "tiff"}], 
        "-", "Datei"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"i", "=."}], ";", "\[IndentingNewLine]", 
      RowBox[{"i", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"i", "=", 
            RowBox[{"i", "+", "1"}]}], ";", 
           RowBox[{"Export", "[", 
            RowBox[{
             RowBox[{
             "outp", "~~", "\"\<Messverlauf\\\\\>\"", " ", "~~", "ID", "~~", 
              "\"\<\\\\\>\"", "~~", "ID", "~~", "\"\< evaluation graphic\>\"",
               "~~", "\"\< _ \>\"", "~~", " ", 
              RowBox[{"ToString", "@", "i"}], "~~", "\"\<.svg\>\""}], ",", 
             "#", ",", 
             RowBox[{"ImageResolution", "->", "1200"}]}], "]"}]}], ")"}], 
         "&"}], ",", "tiffexport"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{
        "outp", "~~", "\"\<Messverlauf\\\\\>\"", " ", "~~", "ID", "~~", 
         "\"\< evaluation graphic.tiff\>\""}], ",", "tiffexport"}], "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", "Fragebogendaten", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"replList", "=."}], ";", "\[IndentingNewLine]", 
      RowBox[{"replList", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "\"\<Atemwegserkrankung\>\"", "->", "\"\<pulmonary disease\>\""}], 
         ",", 
         RowBox[{
         "\"\<Atemwegsinfektion\>\"", "->", "\"\<respiratory infection\>\""}],
          ",", 
         RowBox[{
         "\"\<Nikotinabusus\>\"", "->", "\"\<nicotine consumption\>\""}], ",", 
         RowBox[{"\"\<Geschlecht\>\"", "->", "\"\<gender identity\>\""}], ",", 
         RowBox[{"\"\<maennlich\>\"", "->", "\"\<male\>\""}], ",", 
         RowBox[{"\"\<weiblich\>\"", "->", "\"\<female\>\""}], ",", 
         RowBox[{"\"\<divers\>\"", "->", "\"\<diverse\>\""}], ",", 
         RowBox[{"\"\<Geburtsjahr\>\"", "->", "\"\<year of birth\>\""}], ",", 
         RowBox[{"\"\<Groesse\>\"", "->", "\"\<height [cm]\>\""}], ",", " ", 
         RowBox[{"\"\<Gewicht\>\"", "->", "\"\<weight [kg]\>\""}], ",", 
         RowBox[{
         "\"\<Vorerkrankungen\>\"", "->", "\"\<pre-existing illness\>\""}], 
         ",", 
         RowBox[{"\"\<gesund\>\"", "->", "\"\<healthy\>\""}], ",", 
         RowBox[{"\"\<Fieber\>\"", "->", "\"\<fever\>\""}], ",", 
         RowBox[{"\"\<Schwindel\>\"", "->", "\"\<vertigo\>\""}], ",", 
         RowBox[{"\"\<Pneumothorax\>\"", "->", "\"\<pneumothorax\>\""}], ",", 
         RowBox[{"\"\<OPs\>\"", "->", "\"\<surgeries\>\""}], ",", 
         RowBox[{"\"\<Aneurysma\>\"", "->", "\"\<aneurysma\>\""}], ",", 
         RowBox[{"\"\<Infarkt\>\"", "->", "\"\<infarct\>\""}], ",", 
         RowBox[{"\"\<Kommentar\>\"", "->", "\"\<comment (German)\>\""}]}], 
        "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"quest", "=."}], ";", "\[IndentingNewLine]", 
      RowBox[{"quest", "=", 
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringSplit", "[", 
             RowBox[{
              RowBox[{"StringReplace", "[", 
               RowBox[{
                RowBox[{"StringCases", "[", 
                 RowBox[{"dataLOG", ",", 
                  RowBox[{
                   RowBox[{"\"\<Fragebogen :: \>\"", " ", "~~", 
                    RowBox[{"Shortest", "@", "a__"}], " ", "~~", 
                    "\"\<--- Kommentar ::\>\""}], "->", "a"}]}], "]"}], ",", 
                "replList"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<--\>\"", ",", "\"\<,\>\""}], "}"}]}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<variable\>\"", ",", "\"\<value [0 = none, 1 = existing]\>\""}],
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", "Speichern", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"dataexportsingle", "=."}], ";", "\[IndentingNewLine]", 
      RowBox[{"dataexportsingle", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"ID", "~~", "\"\< Particle Counts, Air Flow\>\""}], "->", 
          "exportdata"}], ",", 
         RowBox[{
          RowBox[{"ID", "~~", "\"\< Questionnaire\>\""}], "->", "quest"}]}], 
        "}"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"dataexport", "=."}], ";", "\[IndentingNewLine]", 
      RowBox[{"dataexport", "=", 
       RowBox[{"Get", "[", 
        RowBox[{
        "outp", "~~", 
         "\"\<Datenexport\\\\evaluated Pexa measurements.m\>\""}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"dataexport", ",", "dataexportsingle"}], "]"}], ";", "\n", 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{
        "outp", "~~", 
         "\"\<Datenexport\\\\evaluated Pexa measurements.xlsx\>\""}], ",", 
        RowBox[{"Flatten", "@", "dataexport"}]}], "]"}], ";", "  ", 
      "\[IndentingNewLine]", 
      RowBox[{"Put", "[", 
       RowBox[{"dataexport", ",", 
        RowBox[{
        "outp", "~~", 
         "\"\<Datenexport\\\\evaluated Pexa measurements.m\>\""}]}], "]"}], 
      ";"}]}], "  ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{"Module", " ", "Ende"}], "*)"}], 
  " "}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8938476815650578`*^9, 3.893847699813048*^9}, {
   3.893847839129753*^9, 3.893847868218815*^9}, {3.893847934823456*^9, 
   3.893847955547378*^9}, {3.8938480715871444`*^9, 3.8938480950709987`*^9}, {
   3.8938481700828943`*^9, 3.8938482640146885`*^9}, {3.89384832808461*^9, 
   3.893848419929473*^9}, {3.893848506776246*^9, 3.893848511514346*^9}, {
   3.893848557544612*^9, 3.893848588071729*^9}, {3.8938669771246157`*^9, 
   3.893867020091587*^9}, {3.893867069450238*^9, 3.89386711193274*^9}, {
   3.8938671462549763`*^9, 3.8938672424108825`*^9}, {3.89386728018369*^9, 
   3.8938673481861887`*^9}, {3.893867379514038*^9, 3.8938677211907625`*^9}, 
   3.8939966747393007`*^9, {3.8941048187043295`*^9, 3.894104829963752*^9}, {
   3.8941049515192814`*^9, 3.894104956709975*^9}, 3.8941050276168795`*^9, {
   3.894105065512319*^9, 3.894105217928528*^9}, {3.8941052834412346`*^9, 
   3.894105322578169*^9}, {3.8941053963843045`*^9, 3.894105405294916*^9}, {
   3.894105483076951*^9, 3.8941054932652974`*^9}, {3.8941055568523045`*^9, 
   3.8941056156478357`*^9}, {3.8941056970473986`*^9, 
   3.8941056975668488`*^9}, {3.8941061299591627`*^9, 
   3.8941061750036416`*^9}, {3.8941069929045935`*^9, 
   3.8941070034615564`*^9}, {3.8941071165019536`*^9, 3.894107119588902*^9}, {
   3.8941082452107244`*^9, 3.894108254328333*^9}, {3.8941082975964417`*^9, 
   3.8941083093674*^9}, {3.894108497491454*^9, 3.894108536655839*^9}, {
   3.8941088711558495`*^9, 3.894108911205485*^9}, 3.894108976095107*^9, {
   3.894109095733751*^9, 3.8941091208697567`*^9}, {3.894109259206447*^9, 
   3.8941092886994114`*^9}, {3.8941169758030796`*^9, 
   3.8941169910383253`*^9}, {3.8941170252232428`*^9, 
   3.8941171084071875`*^9}, {3.8941171631765647`*^9, 3.894117165682522*^9}, {
   3.8941174749522424`*^9, 3.894117486326566*^9}, {3.894117518663679*^9, 
   3.8941175996354413`*^9}, 3.8942480299532905`*^9, {3.8942482575249224`*^9, 
   3.894248322379038*^9}, {3.8942483801261716`*^9, 3.894248404070142*^9}, {
   3.894249167964781*^9, 3.894249178133315*^9}, {3.894274008646387*^9, 
   3.8942740274718313`*^9}, {3.89427405765829*^9, 3.894274088604824*^9}, {
   3.8942752847905493`*^9, 3.8942752900029607`*^9}, {3.8942894648409414`*^9, 
   3.8942894658284016`*^9}, {3.89434565945074*^9, 3.8943456608337517`*^9}, {
   3.8943458152643065`*^9, 3.894345832185567*^9}, {3.8943458681045685`*^9, 
   3.8943459053398247`*^9}, {3.894348551562011*^9, 3.894348552361636*^9}, {
   3.8943486181295614`*^9, 3.894348634983796*^9}, {3.894368242572355*^9, 
   3.8943682434216633`*^9}, {3.8946974249367604`*^9, 3.894697425804639*^9}, {
   3.8946974783486853`*^9, 3.8946974958575172`*^9}, {3.8946975397225604`*^9, 
   3.894697563074538*^9}, {3.895324019017114*^9, 3.8953240442461014`*^9}, {
   3.8953240982696276`*^9, 3.8953240997049723`*^9}, 3.895324132205382*^9, {
   3.8963221873647575`*^9, 3.8963221882134686`*^9}, {3.896322385342717*^9, 
   3.8963224435010023`*^9}, {3.896322525509001*^9, 3.896322613308526*^9}, {
   3.8963227128655148`*^9, 3.896322739888421*^9}, 3.8963228217324677`*^9, {
   3.896323021828117*^9, 3.8963230291942987`*^9}, {3.8963230969627657`*^9, 
   3.8963231030957932`*^9}, {3.8963231725546274`*^9, 
   3.8963232168432913`*^9}, {3.9022187488606796`*^9, 3.902218754767845*^9}, {
   3.9022188980177317`*^9, 3.9022189269217596`*^9}, 3.902218984211111*^9, {
   3.902219152581515*^9, 3.902219166751541*^9}, {3.9022193951714354`*^9, 
   3.9022194480826178`*^9}, {3.902219513839358*^9, 3.90221959622803*^9}, {
   3.9022196691429715`*^9, 3.9022197874632587`*^9}, {3.9022213880567846`*^9, 
   3.902221412963523*^9}, {3.90222158252361*^9, 3.9022215829117565`*^9}, {
   3.9022216975592957`*^9, 3.902221768930257*^9}, {3.902221841550845*^9, 
   3.9022218436948376`*^9}, {3.9022219347828894`*^9, 3.902221960634182*^9}, {
   3.9022223884362326`*^9, 3.902222460869079*^9}, {3.902222507955126*^9, 
   3.9022225193078284`*^9}, {3.919508732844706*^9, 3.9195088254308443`*^9}, {
   3.9195090311702633`*^9, 3.919509033423392*^9}, {3.919509106573474*^9, 
   3.9195091669424872`*^9}, {3.9195092489077682`*^9, 3.91950927726361*^9}, {
   3.919509852451025*^9, 3.919509968885875*^9}, {3.9195100103369417`*^9, 
   3.919510020534561*^9}, {3.9195100836078835`*^9, 3.919510094118374*^9}, {
   3.919510173596182*^9, 3.9195101741154423`*^9}, {3.9195103260025787`*^9, 
   3.9195103396194963`*^9}, {3.9195103748849473`*^9, 3.919510442540577*^9}, {
   3.9195104876591434`*^9, 3.91951048911086*^9}, {3.9195105252338943`*^9, 
   3.9195105274750834`*^9}, {3.919511037533672*^9, 3.9195111004700623`*^9}, {
   3.919511139120961*^9, 3.919511185928712*^9}, {3.9195223074294767`*^9, 
   3.9195223083681636`*^9}, {3.919522396462492*^9, 3.919522463100635*^9}, {
   3.919522497829804*^9, 3.919522547519337*^9}, {3.919522659083788*^9, 
   3.919522661855465*^9}, {3.9195228243283124`*^9, 3.919522878072197*^9}, {
   3.919523103514515*^9, 3.9195231143758287`*^9}, {3.919523157934617*^9, 
   3.919523196644578*^9}, {3.919523316003753*^9, 3.919523379392237*^9}, {
   3.9195234659207*^9, 3.9195234681912694`*^9}, {3.91952357091457*^9, 
   3.9195235783712015`*^9}, {3.919523705565811*^9, 3.9195237176214495`*^9}, {
   3.91952375751311*^9, 3.9195238081873636`*^9}, {3.9195239292094154`*^9, 
   3.9195239315206776`*^9}, {3.919523966817306*^9, 3.9195240369111195`*^9}, {
   3.919524074992756*^9, 3.919524169562929*^9}, {3.9195248046886206`*^9, 
   3.9195248076153154`*^9}, {3.919525168320534*^9, 3.919525174550203*^9}, {
   3.919527564427743*^9, 3.9195275711439476`*^9}, {3.9195276969788923`*^9, 
   3.9195277005542736`*^9}, 3.919528198222777*^9, {3.9195291421543655`*^9, 
   3.919529145824458*^9}, {3.9195292415856056`*^9, 3.919529246237136*^9}, {
   3.919529482479885*^9, 3.919529492099369*^9}, {3.9195297621536875`*^9, 
   3.919529766508068*^9}, 3.9195300799334345`*^9, 3.9195305703128757`*^9, {
   3.919530847515964*^9, 3.9195308648058724`*^9}, {3.91953098115892*^9, 
   3.919530983461189*^9}, {3.919613264863346*^9, 3.9196132855619917`*^9}, {
   3.9196133895198636`*^9, 3.91961339114114*^9}, {3.9196134327483644`*^9, 
   3.919613433150637*^9}, {3.9196134658943334`*^9, 3.9196135284409604`*^9}, {
   3.919613575237042*^9, 3.919613599173042*^9}, {3.9196136823143363`*^9, 
   3.9196137096095295`*^9}, {3.9196137892864456`*^9, 
   3.9196138084524355`*^9}, {3.9196138402451916`*^9, 
   3.9196138412145476`*^9}, {3.9196138760060616`*^9, 
   3.9196138819519877`*^9}, {3.9196139306151447`*^9, 3.919614038532338*^9}, {
   3.919614076031767*^9, 3.919614094955469*^9}, {3.9196141563248763`*^9, 
   3.91961416699918*^9}, {3.9196145467027526`*^9, 3.9196145665302896`*^9}, 
   3.919614669331398*^9, {3.9196148255833464`*^9, 3.919614854788345*^9}, {
   3.9196149098200293`*^9, 3.9196149463806095`*^9}, 3.919615103377221*^9, 
   3.919615190777071*^9, {3.9196152751693525`*^9, 3.919615298088667*^9}, {
   3.9196155305903015`*^9, 3.9196155327780905`*^9}, {3.9196158144428577`*^9, 
   3.9196158152529125`*^9}, {3.9196160483965125`*^9, 3.919616048762605*^9}, {
   3.9196160873390837`*^9, 3.919616110185321*^9}, {3.9196162145098853`*^9, 
   3.919616218751086*^9}, {3.9196167399732285`*^9, 3.9196167621943784`*^9}, {
   3.9206275769642816`*^9, 3.920627577512058*^9}, {3.920627639826124*^9, 
   3.920627644903979*^9}, {3.9206276964020452`*^9, 3.9206277152866955`*^9}, {
   3.9206278269720764`*^9, 3.9206278902500987`*^9}, {3.9206282017201824`*^9, 
   3.920628204072564*^9}, {3.920628585502198*^9, 3.92062859085964*^9}, {
   3.9206286346835413`*^9, 3.9206286400663357`*^9}, {3.920629081303819*^9, 
   3.9206291034116793`*^9}, {3.9211386797194643`*^9, 
   3.9211386804185066`*^9}, {3.9211431394006977`*^9, 3.921143142338558*^9}, {
   3.9211432201700253`*^9, 3.9211432726827855`*^9}, {3.921143495836357*^9, 
   3.9211435044363775`*^9}, {3.9217474971948166`*^9, 3.92174751058322*^9}, 
   3.921747542698019*^9, 3.921747758691679*^9, {3.9217482496936035`*^9, 
   3.9217482737795954`*^9}, {3.921748533283544*^9, 3.921748558715701*^9}, 
   3.921807362578087*^9, 3.921807601989893*^9, {3.921807720611937*^9, 
   3.921807720996791*^9}, {3.9218181204118557`*^9, 3.921818153067121*^9}, {
   3.9218183680297637`*^9, 3.9218183764762454`*^9}, {3.9218194936769185`*^9, 
   3.9218195138593793`*^9}, 3.921819622215435*^9, {3.921831931090675*^9, 
   3.92183196085277*^9}, {3.9218319960673127`*^9, 3.92183204817638*^9}, {
   3.921832080077992*^9, 3.921832131935339*^9}, {3.9218335032371893`*^9, 
   3.921833503987916*^9}, {3.921834167166092*^9, 3.9218341855648904`*^9}, {
   3.9218344127507095`*^9, 3.9218344177615767`*^9}, {3.921834462718528*^9, 
   3.9218344627669783`*^9}, {3.921834544904708*^9, 3.9218345454670315`*^9}, {
   3.921893093259579*^9, 3.9218930978088245`*^9}, {3.9218932700927057`*^9, 
   3.92189330160284*^9}, {3.9218933574722643`*^9, 3.9218933576150236`*^9}, {
   3.9218934637873497`*^9, 3.921893464205635*^9}, {3.92189352329702*^9, 
   3.9218935243421335`*^9}, {3.9218936043530407`*^9, 3.921893628786501*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"6c7b4f8f-00e2-4c40-afe5-2e6e06cb1a52"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"evaluation", "/@", "evalfiles"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8938476815650578`*^9, 3.893847699813048*^9}, {
   3.893847839129753*^9, 3.893847868218815*^9}, {3.893847934823456*^9, 
   3.893847955547378*^9}, {3.8938480715871444`*^9, 3.8938480950709987`*^9}, {
   3.8938481700828943`*^9, 3.8938482640146885`*^9}, {3.89384832808461*^9, 
   3.893848419929473*^9}, {3.893848506776246*^9, 3.893848511514346*^9}, {
   3.893848557544612*^9, 3.893848588071729*^9}, {3.8938669771246157`*^9, 
   3.893867020091587*^9}, {3.893867069450238*^9, 3.89386711193274*^9}, {
   3.8938671462549763`*^9, 3.8938672424108825`*^9}, {3.89386728018369*^9, 
   3.8938673481861887`*^9}, {3.893867379514038*^9, 3.8938677211907625`*^9}, 
   3.8939966747393007`*^9, {3.8941048187043295`*^9, 3.894104829963752*^9}, {
   3.8941049515192814`*^9, 3.894104956709975*^9}, 3.8941050276168795`*^9, {
   3.894105065512319*^9, 3.894105217928528*^9}, {3.8941052834412346`*^9, 
   3.894105322578169*^9}, {3.8941053963843045`*^9, 3.894105405294916*^9}, {
   3.894105483076951*^9, 3.8941054932652974`*^9}, {3.8941055568523045`*^9, 
   3.8941056156478357`*^9}, {3.8941056970473986`*^9, 
   3.8941056975668488`*^9}, {3.8941057846002617`*^9, 3.894105814578213*^9}, {
   3.8941058833115396`*^9, 3.8941058856858974`*^9}, {3.894106056032673*^9, 
   3.894106056946488*^9}, {3.8941094654437428`*^9, 3.8941094668657703`*^9}, {
   3.8941095010443735`*^9, 3.8941095030365505`*^9}, {3.89411711168312*^9, 
   3.894117113070463*^9}, {3.8941171505408564`*^9, 3.89411715209027*^9}, {
   3.8941172171632204`*^9, 3.894117219250264*^9}, {3.894249301742234*^9, 
   3.8942493019050317`*^9}, {3.894251097026707*^9, 3.894251099347722*^9}, {
   3.89425146520208*^9, 3.89425149449129*^9}, {3.8942515561943026`*^9, 
   3.8942515575952215`*^9}, {3.8942737315584264`*^9, 
   3.8942737383604507`*^9}, {3.8942753130944543`*^9, 3.894275369711943*^9}, {
   3.894289303474581*^9, 3.8942893090425067`*^9}, {3.894289422612379*^9, 
   3.894289426890785*^9}, {3.894289474402837*^9, 3.894289509892744*^9}, {
   3.8942898855900908`*^9, 3.8942899095455265`*^9}, {3.894290895163802*^9, 
   3.8942909039808097`*^9}, {3.8942922309260874`*^9, 3.894292239861453*^9}, {
   3.8942923108087425`*^9, 3.8942923355218973`*^9}, {3.8942925559011526`*^9, 
   3.8942925607745695`*^9}, {3.8943459323459835`*^9, 
   3.8943459494371395`*^9}, {3.8943459995617065`*^9, 3.894346021299979*^9}, {
   3.8943462274514256`*^9, 3.894346254040983*^9}, 3.894346671095957*^9, 
   3.894347061172921*^9, {3.894348188418443*^9, 3.8943482038385878`*^9}, {
   3.8943485354922266`*^9, 3.8943485409052553`*^9}, 3.8943485836671715`*^9, {
   3.8943486159427137`*^9, 3.8943486638287187`*^9}, {3.8943492947146153`*^9, 
   3.894349306103227*^9}, {3.8943683059669724`*^9, 3.8943683073532314`*^9}, {
   3.894368347589794*^9, 3.8943683528625097`*^9}, {3.8943696858083167`*^9, 
   3.8943696883645773`*^9}, 3.9195084011365104`*^9, 3.921807555508836*^9},
 CellLabel->"In[61]:=",ExpressionUUID->"53de5e5d-014d-4cc7-aac0-2888044d9f9e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", 
   "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", 
   "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.9218963789211807`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"caa9d5f9-847c-4a4f-a5bc-555f91b4bb0a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"evaluation", "@@", 
   RowBox[{"{", 
    RowBox[{"evalfiles", "[", 
     RowBox[{"[", "14", "]"}], "]"}], "}"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8938476815650578`*^9, 3.893847699813048*^9}, {
   3.893847839129753*^9, 3.893847868218815*^9}, {3.893847934823456*^9, 
   3.893847955547378*^9}, {3.8938480715871444`*^9, 3.8938480950709987`*^9}, {
   3.8938481700828943`*^9, 3.8938482640146885`*^9}, {3.89384832808461*^9, 
   3.893848419929473*^9}, {3.893848506776246*^9, 3.893848511514346*^9}, {
   3.893848557544612*^9, 3.893848588071729*^9}, {3.8938669771246157`*^9, 
   3.893867020091587*^9}, {3.893867069450238*^9, 3.89386711193274*^9}, {
   3.8938671462549763`*^9, 3.8938672424108825`*^9}, {3.89386728018369*^9, 
   3.8938673481861887`*^9}, {3.893867379514038*^9, 3.8938677211907625`*^9}, 
   3.8939966747393007`*^9, {3.8941048187043295`*^9, 3.894104829963752*^9}, {
   3.8941049515192814`*^9, 3.894104956709975*^9}, 3.8941050276168795`*^9, {
   3.894105065512319*^9, 3.894105217928528*^9}, {3.8941052834412346`*^9, 
   3.894105322578169*^9}, {3.8941053963843045`*^9, 3.894105405294916*^9}, {
   3.894105483076951*^9, 3.8941054932652974`*^9}, {3.8941055568523045`*^9, 
   3.8941056156478357`*^9}, {3.8941056970473986`*^9, 
   3.8941056975668488`*^9}, {3.8941057846002617`*^9, 3.894105814578213*^9}, {
   3.8941058833115396`*^9, 3.8941058856858974`*^9}, {3.894106056032673*^9, 
   3.894106056946488*^9}, {3.8941094654437428`*^9, 3.8941094668657703`*^9}, {
   3.8941095010443735`*^9, 3.8941095030365505`*^9}, {3.89411711168312*^9, 
   3.894117113070463*^9}, {3.8941171505408564`*^9, 3.89411715209027*^9}, {
   3.8941172171632204`*^9, 3.894117219250264*^9}, {3.894249301742234*^9, 
   3.8942493019050317`*^9}, {3.894251097026707*^9, 3.894251099347722*^9}, {
   3.89425146520208*^9, 3.89425149449129*^9}, {3.8942515561943026`*^9, 
   3.8942515575952215`*^9}, {3.8942737315584264`*^9, 
   3.8942737383604507`*^9}, {3.8942753130944543`*^9, 3.894275369711943*^9}, {
   3.894289303474581*^9, 3.8942893090425067`*^9}, {3.894289422612379*^9, 
   3.894289426890785*^9}, {3.894289474402837*^9, 3.894289509892744*^9}, {
   3.8942898855900908`*^9, 3.8942899095455265`*^9}, {3.894290895163802*^9, 
   3.8942909039808097`*^9}, {3.8942922309260874`*^9, 3.894292239861453*^9}, {
   3.8942923108087425`*^9, 3.8942923355218973`*^9}, {3.8942925559011526`*^9, 
   3.8942925607745695`*^9}, {3.8943459323459835`*^9, 
   3.8943459494371395`*^9}, {3.8943459995617065`*^9, 3.894346021299979*^9}, {
   3.8943462274514256`*^9, 3.894346254040983*^9}, 3.894346671095957*^9, 
   3.894347061172921*^9, {3.894348188418443*^9, 3.8943482038385878`*^9}, {
   3.8943485354922266`*^9, 3.8943485409052553`*^9}, 3.8943485836671715`*^9, {
   3.8943486159427137`*^9, 3.8943486638287187`*^9}, {3.8943492947146153`*^9, 
   3.894349306103227*^9}, {3.8943683059669724`*^9, 3.8943683073532314`*^9}, {
   3.894368347589794*^9, 3.8943683528625097`*^9}, {3.919524409098713*^9, 
   3.9195244092639074`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"288c0620-bde3-4903-b0d9-e804638beef4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"evaluation", "@@", 
   RowBox[{"{", 
    RowBox[{"evalfiles", "[", 
     RowBox[{"[", "21", "]"}], "]"}], "}"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8938476815650578`*^9, 3.893847699813048*^9}, {
   3.893847839129753*^9, 3.893847868218815*^9}, {3.893847934823456*^9, 
   3.893847955547378*^9}, {3.8938480715871444`*^9, 3.8938480950709987`*^9}, {
   3.8938481700828943`*^9, 3.8938482640146885`*^9}, {3.89384832808461*^9, 
   3.893848419929473*^9}, {3.893848506776246*^9, 3.893848511514346*^9}, {
   3.893848557544612*^9, 3.893848588071729*^9}, {3.8938669771246157`*^9, 
   3.893867020091587*^9}, {3.893867069450238*^9, 3.89386711193274*^9}, {
   3.8938671462549763`*^9, 3.8938672424108825`*^9}, {3.89386728018369*^9, 
   3.8938673481861887`*^9}, {3.893867379514038*^9, 3.8938677211907625`*^9}, 
   3.8939966747393007`*^9, {3.8941048187043295`*^9, 3.894104829963752*^9}, {
   3.8941049515192814`*^9, 3.894104956709975*^9}, 3.8941050276168795`*^9, {
   3.894105065512319*^9, 3.894105217928528*^9}, {3.8941052834412346`*^9, 
   3.894105322578169*^9}, {3.8941053963843045`*^9, 3.894105405294916*^9}, {
   3.894105483076951*^9, 3.8941054932652974`*^9}, {3.8941055568523045`*^9, 
   3.8941056156478357`*^9}, {3.8941056970473986`*^9, 
   3.8941056975668488`*^9}, {3.8941057846002617`*^9, 3.894105814578213*^9}, {
   3.8941058833115396`*^9, 3.8941058856858974`*^9}, {3.894106056032673*^9, 
   3.894106056946488*^9}, {3.8941094654437428`*^9, 3.8941094668657703`*^9}, {
   3.8941095010443735`*^9, 3.8941095030365505`*^9}, {3.89411711168312*^9, 
   3.894117113070463*^9}, {3.8941171505408564`*^9, 3.89411715209027*^9}, {
   3.8941172171632204`*^9, 3.894117219250264*^9}, {3.894249301742234*^9, 
   3.8942493019050317`*^9}, {3.894251097026707*^9, 3.894251099347722*^9}, {
   3.89425146520208*^9, 3.89425149449129*^9}, {3.8942515561943026`*^9, 
   3.8942515575952215`*^9}, {3.8942737315584264`*^9, 
   3.8942737383604507`*^9}, {3.8942753130944543`*^9, 3.894275369711943*^9}, {
   3.894289303474581*^9, 3.8942893090425067`*^9}, {3.894289422612379*^9, 
   3.894289426890785*^9}, {3.894289474402837*^9, 3.894289509892744*^9}, {
   3.8942898855900908`*^9, 3.8942899095455265`*^9}, {3.894290895163802*^9, 
   3.8942909039808097`*^9}, {3.8942922309260874`*^9, 3.894292239861453*^9}, {
   3.8942923108087425`*^9, 3.8942923355218973`*^9}, {3.8942925559011526`*^9, 
   3.8942925607745695`*^9}, {3.8943459323459835`*^9, 
   3.8943459494371395`*^9}, {3.8943459995617065`*^9, 3.894346021299979*^9}, {
   3.8943462274514256`*^9, 3.894346254040983*^9}, 3.894346671095957*^9, 
   3.894347061172921*^9, {3.894348188418443*^9, 3.8943482038385878`*^9}, {
   3.8943485354922266`*^9, 3.8943485409052553`*^9}, 3.8943485836671715`*^9, {
   3.8943486159427137`*^9, 3.8943486638287187`*^9}, {3.8943492947146153`*^9, 
   3.894349306103227*^9}, {3.8943683059669724`*^9, 3.8943683073532314`*^9}, {
   3.894368347589794*^9, 3.8943683528625097`*^9}},
 CellLabel->
  "In[683]:=",ExpressionUUID->"432bd670-ec8f-4194-b5e1-bbf42ff341c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"times", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9217488327293477`*^9, 3.9217488358172107`*^9}},
 CellLabel->
  "In[680]:=",ExpressionUUID->"108d21e4-c555-48fb-8aa9-35985e089ccf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.5`", ",", "0.5`", ",", "0.5`", ",", "0.5`", ",", "0.5`", ",", "0.5`", 
   ",", "0.5`", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", 
   ",", "2", ",", "3", ",", "3", ",", "max", ",", "max", ",", "max", ",", 
   "max", ",", "0.5`", ",", "0.5`", ",", "0.5`", ",", "0.5`", ",", "0.5`", 
   ",", "1", ",", "0.5`", ",", "1", ",", "1", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "max", ",", "max", ",", "max", ",", "max", ",", "0.5`", ",",
    "0.5`", ",", "0.5`", ",", "0.5`", ",", "0.5`", ",", "0.5`", ",", "1", ",",
    "1", ",", "1", ",", "2", ",", "2", ",", "2", ",", "max", ",", "max", ",", 
   "max", ",", "max", ",", "0.5`", ",", "0.5`", ",", "0.5`", ",", "0.5`", ",",
    "1", ",", "1", ",", "1", ",", "1", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.9217488359511385`*^9},
 CellLabel->
  "Out[680]=",ExpressionUUID->"f0762475-5851-4c89-811f-76b83eedec18"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Respiratory measurements", "Subtitle",
 CellChangeTimes->{{3.892893461425037*^9, 
  3.892893477970545*^9}},ExpressionUUID->"5d72c844-571d-4eb6-9819-\
f84285d93dbe"],

Cell["\<\
s . \"H:\\Datenerhebung und Auswertung\\Messungen\\Respiratory Data.nb\"\
\>", "Input",
 CellChangeTimes->{{3.8933074987980237`*^9, 3.893307516738909*^9}, 
   3.8933075561810875`*^9, {3.8933266517810335`*^9, 
   3.8933266548426175`*^9}},ExpressionUUID->"821e0c2f-d788-466f-a16a-\
5e375ac53978"]
}, Open  ]],

Cell[CellGroupData[{

Cell["End", "Subtitle",
 CellChangeTimes->{{3.890986978942924*^9, 3.890986981926728*^9}, {
  3.919508469901431*^9, 3.9195084709584303`*^9}, {3.919508524574346*^9, 
  3.9195085343720026`*^9}},
 FontColor->RGBColor[1, 0, 0],
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"21e4ca7f-593f-4330-874e-9aa0a4dfe9e0"],

Cell["Questionnaire", "Subtitle",
 CellChangeTimes->{{3.890986978942924*^9, 3.890986981926728*^9}, {
  3.919508469901431*^9, 3.9195084709584303`*^9}, {3.919508524574346*^9, 
  3.9195085404782314`*^9}},
 FontColor->RGBColor[1, 0, 0],
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"f94d3ec7-a5e7-45a1-b42a-146f53fb1ecd"],

Cell[TextData[{
 Cell[BoxData[{
  RowBox[{"replList", "=."}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"replList", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
       "\"\<Atemwegserkrankung\>\"", "->", "\"\<pulmonary disease\>\""}], ",", 
       RowBox[{
       "\"\<Atemwegsinfektion\>\"", "->", "\"\<respiratory infection\>\""}], 
       ",", 
       RowBox[{
       "\"\<Nikotinabusus\>\"", "->", "\"\<nicotine consumption\>\""}], ",", 
       RowBox[{"\"\<Geschlecht\>\"", "->", "\"\<gender identity\>\""}], ",", 
       RowBox[{"\"\<maennlich\>\"", "->", "\"\<male\>\""}], ",", 
       RowBox[{"\"\<weiblich\>\"", "->", "\"\<female\>\""}], ",", 
       RowBox[{"\"\<divers\>\"", "->", "\"\<diverse\>\""}], ",", 
       RowBox[{"\"\<Geburtsjahr\>\"", "->", "\"\<year of birth\>\""}], ",", 
       RowBox[{"\"\<Groesse\>\"", "->", "\"\<height [cm]\>\""}], ",", " ", 
       RowBox[{"\"\<Gewicht\>\"", "->", "\"\<weight [kg]\>\""}], ",", 
       RowBox[{
       "\"\<Vorerkrankungen\>\"", "->", "\"\<pre-existing illness\>\""}], ",", 
       RowBox[{"\"\<gesund\>\"", "->", "\"\<healthy\>\""}], ",", 
       RowBox[{"\"\<Fieber\>\"", "->", "\"\<fever\>\""}], ",", 
       RowBox[{"\"\<Schwindel\>\"", "->", "\"\<vertigo\>\""}], ",", 
       RowBox[{"\"\<Pneumothorax\>\"", "->", "\"\<pneumothorax\>\""}], ",", 
       RowBox[{"\"\<OPs\>\"", "->", "\"\<surgeries\>\""}], ",", 
       RowBox[{"\"\<Aneurysma\>\"", "->", "\"\<aneurysma\>\""}], ",", 
       RowBox[{"\"\<Infarkt\>\"", "->", "\"\<infarct\>\""}], ",", 
       RowBox[{"\"\<Kommentar\>\"", "->", "\"\<comment (German)\>\""}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"quest", "=."}], ";"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"quest", "=", 
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringSplit", "[", 
          RowBox[{
           RowBox[{"StringReplace", "[", 
            RowBox[{
             RowBox[{"StringCases", "[", 
              RowBox[{"dataLOG", ",", 
               RowBox[{
                RowBox[{"\"\<Fragebogen :: \>\"", " ", "~~", 
                 RowBox[{"Shortest", "@", "a__"}], " ", "~~", 
                 "\"\<--- Kommentar ::\>\""}], "->", "a"}]}], "]"}], ",", 
             "replList"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<--\>\"", ",", "\"\<,\>\""}], "}"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<variable\>\"", ",", "\"\<value [0 = none, 1 = existing]\>\""}], 
       "}"}]}], "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
    "outp", "~~", 
     "\"\<\\\\Datenexport\\\\evaluated Pexa measurements.xlsx\>\""}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"ID", "~~", "\"\< Particle Counts, Air Flow\>\""}], "->", 
       "exportdata"}], ",", 
      RowBox[{
       RowBox[{"ID", "~~", "\"\< Questionnaire\>\""}], "->", "quest"}]}], 
     "}"}]}], "]"}]}], "Input",ExpressionUUID->
  "27f81d42-af96-4b57-ae46-f368459c0488"],
 "\n"
}], "Subtitle",
 CellChangeTimes->{{3.890986978942924*^9, 3.890986981926728*^9}, {
   3.919508469901431*^9, 3.9195084709584303`*^9}, 3.919508524574346*^9, {
   3.9195085852166514`*^9, 
   3.9195085855655403`*^9}},ExpressionUUID->"d80f8984-6df8-4d61-9c02-\
54200257bee1"],

Cell["Manual Functions", "Subtitle",
 CellChangeTimes->{{3.890986978942924*^9, 3.890986981926728*^9}, {
   3.919508469901431*^9, 3.9195084709584303`*^9}, 3.919508524574346*^9, {
   3.9195085852166514`*^9, 
   3.9195085877183495`*^9}},ExpressionUUID->"6cba57cf-16b3-4957-9be5-\
9c19dbb72160"],

Cell[TextData[{
 Cell[BoxData[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"src", ",", "outp"}], "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
   "src", "=", 
    "\"\<H:\\\\Datenerhebung und Auswertung\\\\Messungen\\\\\>\""}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
    "outp", "=", 
     "\"\<H:\\\\Datenerhebung und Auswertung\\\\Ausgabe\\\\\>\""}], ";"}], 
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
  RowBox[{"ID", "=."}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ID", "=", "\"\<10\>\""}], ";"}], 
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
  RowBox[{"files", "=."}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"files", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"FileNames", "[", 
        RowBox[{"All", ",", 
         RowBox[{
         "\"\<H:\\\\Datenerhebung und Auswertung\\\\Messungen\\\\\>\"", "~~", 
          "ID"}], ",", "#"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"01", " ", "entfernen"}], "*)"}], "  "}], "\[IndentingNewLine]", 
  RowBox[{"pexaFiles", "=."}], "\[IndentingNewLine]", 
  RowBox[{"logFiles", "=."}], "\[IndentingNewLine]", 
  RowBox[{"respFiles", "=."}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"pexaFiles", "=", 
    RowBox[{
     RowBox[{"StringCases", "[", 
      RowBox[{
       RowBox[{"files", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"__", "~~", "\"\<.xlsx\>\""}]}], "]"}], "/.", 
     RowBox[{
      RowBox[{"{", "}"}], "->", "Nothing"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"logFiles", "=", 
    RowBox[{
     RowBox[{"StringCases", "[", 
      RowBox[{
       RowBox[{"files", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"__", "~~", "\"\<_protocol.txt\>\""}]}], "]"}], "/.", 
     RowBox[{
      RowBox[{"{", "}"}], "->", "Nothing"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"respFiles", "=", 
    RowBox[{
     RowBox[{"StringCases", "[", 
      RowBox[{
       RowBox[{"files", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"__", "~~", "\"\<Spiro und Diff.tsv\>\""}]}], "]"}], "/.", 
     RowBox[{
      RowBox[{"{", "}"}], "->", "Nothing"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"evalfiles", "=."}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"evalfiles", "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Flatten", "@", "pexaFiles"}], ",", 
       RowBox[{"Flatten", "@", "logFiles"}], ",", 
       RowBox[{"Flatten", "@", "respFiles"}]}], "}"}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
  RowBox[{"dataPEXA", "=."}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dataPEXA", "=", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{"pexaFiles", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"dataPEXA", "=", 
     RowBox[{"Transpose", "[", "dataPEXA", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Liste", " ", "der", " ", "Variablennamen", " ", "in", " ", "der", " ", 
     "Pexa", " ", "Ausgabe"}], "*)"}]}], "\[IndentingNewLine]", 
  RowBox[{"varnamelist", "=."}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"varnamelist", "=", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "->", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "&"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"dataPEXA", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"dataPEXA", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", "1"}], 
           "]"}]}], "}"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Funktion", " ", "zum", " ", "Finden", " ", "der", " ", "Variablen"}], 
     "-", "Zeilennummer"}], "*)"}]}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"findvarname", "[", "a_String", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "b", "}"}], ",", 
     RowBox[{
      RowBox[{"b", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"StringCases", "[", 
          RowBox[{
           RowBox[{"varnamelist", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "a"}], "]"}], ",", 
         "a"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "b", "]"}], "==", "1"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"StringQ", "[", "a", "]"}], ",", 
          RowBox[{
           RowBox[{"First", "[", "b", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"varnamelist", "[", 
           RowBox[{"[", 
            RowBox[{"a", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
        "\"\<es gibt mehrere Treffer\>\""}], "]"}]}]}], 
    "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"findvarname", "[", "\"\<Elap\>\"", "]"}], "\n", 
  RowBox[{
   RowBox[{"findvarname", "[", "\"\<Particle 1 \>\"", "]"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Umrechnen", " ", "der", " ", "elapsed", " ", "time", " ", "auf", " ", 
     "ms"}], "*)"}]}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataPEXA", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "=", 
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Rest", "@", 
        RowBox[{"dataPEXA", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "*", "1000"}], ",", 
      RowBox[{"First", "@", 
       RowBox[{"dataPEXA", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dataPEXA", "[", 
    RowBox[{"[", "2", "]"}], "]"}], ";"}]}], "Input",ExpressionUUID->
  "a6c26ac3-f579-4e49-b5b2-68c019bdc680"],
 "\n",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
    "\"\<H:\\\\Datenerhebung und Auswertung\\\\Messungen\\\\10\\\\2023-03-28 \
13.24.24.xlsx\>\"", ",", 
     "\"\<H:\\\\Datenerhebung und \
Auswertung\\\\Messungen\\\\10\\\\10_protocol.txt\>\"", ",", 
     "\"\<H:\\\\Datenerhebung und Auswertung\\\\Messungen\\\\10\\\\QHA10 \
Spiro und Diff.tsv\>\""}], "}"}], "}"}]], "Output",ExpressionUUID->
  "2c33fb0a-3e35-4fcf-a3a4-2567686fa249"],
 "\n",
 Cell[BoxData[
 "2"], "Output",ExpressionUUID->"48075d2f-00d4-4f16-8cc5-ceb6117115a5"],
 "\n",
 Cell[BoxData[
 "5"], "Output",ExpressionUUID->"bf80905d-e6f0-4ec8-aa1d-e2ee1a392509"],
 "\n",
 Cell[BoxData[{
  RowBox[{"dataLOG", "=."}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataLOG", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"logFiles", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", "Protokollaufbereitung", "*)"}]}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"starttime", "=."}], " ", 
   RowBox[{"(*", 
    RowBox[{"in", " ", "ms"}], "*)"}]}], "\[IndentingNewLine]", 
  RowBox[{"x", "=."}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"starttime", "=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"StringCases", "[", 
        RowBox[{"dataLOG", ",", 
         RowBox[{
          RowBox[{"\"\<PExA Start :: \>\"", " ", "~~", " ", 
           RowBox[{"Shortest", "[", "x__", "]"}], " ", "~~", "\"\< ---\>\""}],
           "->", "x"}]}], "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
  RowBox[{"times", "=."}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"times", "=", 
    RowBox[{"StringCases", "[", 
     RowBox[{"dataLOG", ",", 
      RowBox[{
       RowBox[{
       "\"\<Anmerkungen --- \>\"", " ", "~~", " ", "x__", " ", "~~", " ", 
        "\"\< --- Fragebogen\>\""}], "->", 
       RowBox[{"x", "~~", "\"\< -\>\""}]}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"times", "=", 
    RowBox[{"StringReplace", "[", 
     RowBox[{"times", ",", 
      RowBox[{"\"\<, -\>\"", "->", "\"\<,nv -\>\""}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"times", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"StringSplit", "[", 
       RowBox[{"times", ",", "\"\< --- \>\""}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Kommata", " ", "als", " ", "versehentliche", " ", "Trennzeichen", " ", 
     "in", " ", "den", " ", "Kommentarfeldern", " ", "m\[UDoubleDot]ssen", 
     " ", "ersetzt", " ", "werden"}], " ", "*)"}], 
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
  RowBox[{"r", "=."}], "\[IndentingNewLine]", 
  RowBox[{"a", "=."}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"times", "=", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"r", "=", 
          RowBox[{"StringReverse", "@", 
           RowBox[{
            RowBox[{"StringReplace", "[", 
             RowBox[{
              RowBox[{"StringCases", "[", 
               RowBox[{
                RowBox[{"StringReverse", "@", "#"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Last", "@", 
                   RowBox[{"Characters", "[", "#", "]"}]}], "~~", " ", 
                  RowBox[{"Shortest", "[", "a__", "]"}], "~~", 
                  RowBox[{"\"\<,0\>\"", "|", "\"\<,1\>\""}]}], "->", "a"}]}], 
               "]"}], ",", 
              RowBox[{"\"\<,\>\"", "->", "\"\<***\>\""}]}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"StringReplace", "[", 
          RowBox[{"#", ",", 
           RowBox[{
            RowBox[{"StringReplace", "[", 
             RowBox[{"r", ",", 
              RowBox[{"\"\<***\>\"", "->", "\"\<,\>\""}]}], "]"}], "->", 
            "r"}]}], "]"}]}], ")"}], "&"}], ",", "times"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"times", "=", " ", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StringSplit", "[", 
        RowBox[{"#", ",", "\"\<,\>\""}], "]"}], "&"}], ",", "times"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"times", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"1", ";;", 
         RowBox[{"-", "2"}]}]}], "]"}], "]"}], "=", " ", 
     RowBox[{"ToExpression", "/@", 
      RowBox[{"times", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"1", ";;", 
          RowBox[{"-", "2"}]}]}], "]"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "die", " ", "Zeiten", " ", "werden", " ", "zur", " ", "Startzeit", " ", 
      "synchronisiert"}], ",", " ", 
     RowBox[{
     "also", " ", "zur", " ", "elapsed", " ", "time", " ", 
      "synchronisiert"}]}], "*)"}]}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"times", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}], "=", 
    RowBox[{
     RowBox[{"times", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "-", "starttime"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"times", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], "=", 
     RowBox[{
      RowBox[{"times", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "-", "starttime"}]}], ";"}], 
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"times", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"-", "1"}]}], "]"}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"Last", "@", "#"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<***\>\"", "->", "\"\<,\>\""}], ",", 
           RowBox[{"\"\<nv -\>\"", "->", "\"\<nv\>\""}]}], "}"}]}], "]"}], 
       "&"}], "/@", "times"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "die", " ", "Kommata", " ", "in", " ", "den", " ", "Kommentaren", " ", 
     "werden", " ", "wieder", " ", "eingepflegt"}], 
    "*)"}]}], "\[IndentingNewLine]", 
 "times", "\[IndentingNewLine]"}], "Input",ExpressionUUID->
  "15e20e4f-1978-4ddf-9a15-9a118100e848"],
 "\n",
 Cell[BoxData[
  RowBox[{"\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Protokoll", "-", 
     RowBox[{"Messabschnitte", " ", "in", " ", "dataPEXA", " ", "finden"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"positions", "=."}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"positions", "=", 
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"FirstPosition", "[", 
            RowBox[{
             RowBox[{"Rest", "[", 
              RowBox[{"dataPEXA", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
             RowBox[{"n_", "/;", 
              RowBox[{"n", ">=", "#"}]}]}], "]"}], "&"}], ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"times", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", 
              RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], "]"}]}], "]"}], ",", 
        "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
    RowBox[{"positions", "=", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", "#", "]"}], "&"}], ",", "positions", ",", 
       RowBox[{"{", "1", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",ExpressionUUID->
  "af3e83db-7e71-4383-85dd-e29b1023b9cc"],
 "\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAAAAAAAAAgOD4f1gtx5o=
          "], {{0, 91.00467662921565}, {171.00878795160304`, 0}}, {0, 255},
          ColorFunction->RGBColor,
          ImageResolution->{143.9926, 143.9926},
          SmoothingQuality->"High"],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSize->{312.7521969878991, Automatic},
        ImageSizeRaw->{171.00878795160304`, 91.00467662921565},
        PlotRange->{{0, 171.00878795160304`}, {0, 91.00467662921565}}], 
       "\[IndentingNewLine]", 
       RowBox[{"Korrektur", ":", " ", "\[Phi]"}]}], " ", "=", " ", 
      RowBox[{"0.25", " ", 
       RowBox[{"l", "/", " ", "s"}]}]}], ",", " ", 
     RowBox[{
     "\"\<The OPC takes a sample and calculates the particle concentration, \
that is the primary output from the OPC. The total flow is 0,25l/s , which is \
what you should use if you are interested of the exhaled particle rather then \
the particles collected in the impactor.\>\"", " ", "Svante", " ", "Hojer"}], 
     ",", " ", 
     RowBox[{"from", " ", "Pexa"}], ",", " ", 
     RowBox[{
     "02.01", ".2023", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "Partikelgr\[ODoubleDot]\[SZ]en", " ", "in", " ", "\[Micro]m", " ", 
      "Bins", " ", "des", "\[IndentingNewLine]", "11", "D", " ", "H20", " ", 
      "Aerosolspektrometer", " ", "Firma", " ", "Grimm", "\n", "\n", "Bin", 
      " ", "1", " ", "0"}], ",", 
     RowBox[{"309571553", "\n", "Bin", " ", "2", " ", "0"}], ",", 
     RowBox[{"3776321", "\n", "Bin", " ", "3", " ", "0"}], ",", 
     RowBox[{"452400811", "\n", "Bin", " ", "4", " ", "0"}], ",", 
     RowBox[{"555994647", "\n", "Bin", " ", "5", " ", "0"}], ",", 
     RowBox[{"70346326", "\n", "Bin", " ", "6", " ", "0"}], ",", 
     RowBox[{"943336729", "\n", "Bin", " ", "7", " ", "1"}], ",", 
     RowBox[{"149495579", "\n", "Bin", " ", "8", " ", "1"}], ",", 
     RowBox[{"277719573", "\n", "Bin", " ", "9", " ", "1"}], ",", 
     RowBox[{"375165427", "\n", "Bin", " ", "10", " ", "1"}], ",", 
     RowBox[{"46599766", "\n", "Bin", " ", "11", " ", "1"}], ",", 
     RowBox[{"566296996", "\n", "Bin", " ", "12", " ", "1"}], ",", 
     RowBox[{"692565199", "\n", "Bin", " ", "13", " ", "1"}], ",", 
     RowBox[{"885696842", "\n", "Bin", " ", "14", " ", "2"}], ",", 
     RowBox[{"158702163", "\n", "Bin", " ", "15", " ", "2"}], ",", 
     RowBox[{"51855379", "\n", "Bin", " ", "16", " ", "3"}], ",", 
     RowBox[{
     "422327161", "\n", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\"\<This means the first bin is between 0,3096 and 0,3776[\[Micro]m] \
and bin 16 contains particles larger then 3,4223[mm].\>\"", " ", "Svante", 
      " ", "Hojer"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Berechnung", " ", "der", " ", "Volumina"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Expiratory", " ", "bounds", "\[IndentingNewLine]", 
      GraphicsBox[{{}, {{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
Gd+H+7//B9ksoSs=
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
/wB6XUGb
           "]]}}, 
        LineBox[{{462.44843436199534`, 212.65977189113704`}, {
         462.44843436199534`, -48.49209302017107}}], 
        {Arrowheads[0.017139573075084253`], 
         ArrowBox[{{463.19086961780664`, 7.71608982841019}, {
          437.9480701030099, 7.71608982841019}}]}, 
        LineBox[{{435.72076426346894`, -3.525546740619575}, {
         435.72076426346894`, 242.92571650349572`}}], 
        LineBox[{{518.1310803264819, 212.65977189456925`}, {
         518.1310803264819, -81.35226144928754}}], 
        {Arrowheads[0.017139573075084253`], EdgeForm[{GrayLevel[0.], Opacity[
         1.], AbsoluteThickness[1]}], EdgeForm[None], 
         ArrowBox[{{517.3886450466348, 7.71608982841019}, {477.2971399348989, 
          7.71608982841019}}]}, 
        LineBox[{{477.2971399348989, -2.660805466078841}, {477.2971399348989, 
         214.38925444365077`}}]},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0., 0},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{12.361345, 6.19946}, {0.5, 0.5}},
       ImageSize->{676.7142857142869, Automatic},
       Method->{
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotRange->{{-14.333333333333336`, 702.3333333333334}, {-298.908421, 
        216.98163}},
       PlotRangeClipping->True,
       PlotRangePadding->Automatic,
       Ticks->{Automatic, Automatic}], "\[IndentingNewLine]", "Inspiratory", 
      " ", "bounds", "\[IndentingNewLine]", 
      GraphicsBox[{{}, {{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
Gd+H+7//B9ksoSs=
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
/wB6XUGb
           "]]}}, 
        LineBox[{{462.44843436199534`, 212.65977189113704`}, {
         462.44843436199534`, -48.49209302017107}}], 
        {Arrowheads[0.017139573075084253`], 
         ArrowBox[{{461.8297382714205, -21.6130517330971}, {
          447.4759895277127, -21.6130517330971}}]}, 
        LineBox[{{446.60981503455776`, -242.12207674098954`}, {
         446.60981503455776`, 4.3291865031256975`}}], 
        LineBox[{{408.9002897789976, 55.11472093917541}, {
         408.9002897789976, -238.89731240468137`}}], 
        {Arrowheads[0.017139573075084253`], EdgeForm[{GrayLevel[0.], Opacity[
         1.], AbsoluteThickness[1]}], EdgeForm[None], 
         ArrowBox[{{445.92924936136467`, -42.22271877631846}, {
          407.879441269208, -42.22271877631846}}]}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0., 0},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{12.361345, 6.19946}, {0.5, 0.5}},
       ImageSize->{676.7142857142869, Automatic},
       Method->{
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotRange->{{-14.333333333333336`, 702.3333333333334}, {-298.908421, 
        216.98163}},
       PlotRangeClipping->True,
       PlotRangePadding->Automatic,
       Ticks->{Automatic, Automatic}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "Schwelle"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"1", " ", "bzw"}], " ", "-", 
      RowBox[{"1", " ", 
       RowBox[{"m", "/", "s"}]}]}]}], "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"exportdata", "=."}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"exportdata", "=", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
        "\"\<inspiratory/expiratory target volume [l]\>\"", ",", 
         "\"\<inspiratory volume [ml]\>\"", ",", 
         "\"\<expiratory volume [ml]\>\"", ",", 
         "\"\<equality % [V_expiratory/V_inspiratory / 100]\>\"", ",", 
         "\"\<accuracy % [d_exp = V_expiratory - V_target, d_insp = \
V_inspiratory - V_target; if d_exp = 0 and d_insp = 0 then  acc = 100, if \
d_insp < d_exp or d_exp < d_insp then maximum(|d_exp|, |d_insp|)/ V_target / \
100, if (d_exp > 0 and d_insp < 0) or (d_insp > 0 and d_exp < 0) then \
(|d_exp| + |d_insp|)/ V_target / 100]\>\"", ",", 
         "\"\<maximum inspiratory flow rate [ml/s]\>\"", ",", 
         "\"\<maximum expiratory flow rate [ml/s]\>\"", ",", 
         "\"\<inspiratory target time [s]\>\"", ",", 
         "\"\<inspiratory time [s]\>\"", ",", 
         "\"\<expiratory target time [s]\>\"", ",", 
         "\"\<expiratory time [s]\>\"", ",", 
         "\"\<n breaths from HEPA tube before expiration in PExA\>\"", ",", 
         "\"\<volume of breaths before expiration in PExA [ml]\>\"", ",", 
         "\"\<invalid (0 no, 1 yes)\>\"", ",", 
         "\"\<Particles > 0.31 - 0.38 \[Micro]m\>\"", ",", " ", 
         "\"\<Particles 0.38 - 0.45 \[Micro]m\>\"", ",", " ", 
         "\"\<Particles 0.45 - 0.56 \[Micro]m\>\"", ",", " ", 
         "\"\<Particles 0.56 - 0.70 \[Micro]m\>\"", ",", " ", 
         "\"\<Particles 0.70 - 0.94 \[Micro]m\>\"", ",", " ", 
         "\"\<Particles 0.94 - 1.15 \[Micro]m\>\"", ",", " ", 
         "\"\<Particles 1.15 - 1.28 \[Micro]m\>\"", ",", " ", 
         "\"\<Particles 1.28 - 1.38 \[Micro]m\>\"", ",", " ", 
         "\"\<Particles 1.38 - 1.47 \[Micro]m\>\"", ",", " ", 
         "\"\<Particles 1.47 - 1.57  \[Micro]m\>\"", ",", " ", 
         "\"\<Particles 1.57 - 1.69  \[Micro]m\>\"", ",", " ", 
         "\"\<Particles 1.69 - 1.89  \[Micro]m\>\"", ",", " ", 
         "\"\<Particles 1.89 - 2.16  \[Micro]m\>\"", ",", " ", 
         "\"\<Particles 2.16 - 2.52  \[Micro]m\>\"", ",", " ", 
         "\"\<Particles 2.52 - 3.42  \[Micro]m\>\"", ",", " ", 
         "\"\<Particles > 3.42  \[Micro]m\>\"", ",", " ", 
         "\"\<Sum all Particles\>\""}], "}"}], "}"}]}], ";"}], "  ", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"zu", " ", 
      RowBox[{"erg\[ADoubleDot]nzen", ":", " ", 
       RowBox[{
        RowBox[{"Frageb\[ODoubleDot]gen", " ", "und", " ", "Lufu"}], "-", 
        "Daten"}]}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"j", "=."}], ";"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"j", "=", "0"}], ";"}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"incl", "=."}], ";"}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tiffexport", "=."}], ";"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tiffexport", "=", 
      RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Clear", "[", 
           RowBox[{
           "particlesextract", ",", "extract", ",", "extractins", ",", 
            "maxposextract", ",", "lbound", ",", "ubound", ",", 
            "uboundextract", ",", "bounds", ",", "volexp", ",", "volins", ",",
             "lboundins", ",", "uboundins", ",", "boundsins", ",", 
            "extracttime", ",", "tinspreal", ",", "texpreal", ",", 
            "maxflowin", ",", "maxflowex"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"extract", "=", 
           RowBox[{
            RowBox[{"dataPEXA", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ";;", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"extractins", "=", 
           RowBox[{
            RowBox[{"dataPEXA", "[", 
             RowBox[{"[", "33", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ";;", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"extracttime", "=", 
           RowBox[{
            RowBox[{"dataPEXA", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ";;", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"maxposextract", "=", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"extract", ",", 
              RowBox[{"Max", "@", "extract"}]}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", " ", 
          RowBox[{"(*", 
           RowBox[{"Maximum", " ", "Exp", " ", "Flow", " ", "Position"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"particlesextract", "=", 
           RowBox[{
            RowBox[{"dataPEXA", "[", 
             RowBox[{"[", 
              RowBox[{"4", ";;", "20"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ";;", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"particlesextractsum", "=", 
           RowBox[{
            RowBox[{"dataPEXA", "[", 
             RowBox[{"[", "21", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ";;", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
            "Spalte", " ", "4", " ", "ist", " ", "Deltatime", " ", "OPC"}], 
            ",", " ", 
            RowBox[{"5", "-", 
             RowBox[{
             "20", " ", "sind", " ", "die", " ", "Partikelklassen"}]}]}], 
           "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"j", "=", 
           RowBox[{"j", "+", "1"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"times", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", 
                 RowBox[{"-", "2"}]}], "]"}], "]"}], "==", "1"}], " ", "&&", 
             " ", 
             RowBox[{"StringContainsQ", "[", 
              RowBox[{
               RowBox[{"times", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", 
                  RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
               RowBox[{"\"\<Equa\>\"", "|", "\"\<V \>\""}]}], "]"}]}], ",", 
            RowBox[{"incl", "=", "True"}], ",", 
            RowBox[{
             RowBox[{"times", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", 
                RowBox[{"-", "2"}]}], "]"}], "]"}], "==", "1"}], ",", 
            RowBox[{"incl", "=", "False"}], ",", 
            RowBox[{
             RowBox[{"times", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", 
                RowBox[{"-", "2"}]}], "]"}], "]"}], "==", "0"}], ",", 
            RowBox[{"incl", "=", "True"}]}], "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"incl", "==", "False"}], ",", "Nothing", ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Max", "@", "extract"}], ">", "1"}], ",", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "zun\[ADoubleDot]chst", " ", "Bestimmung", " ", "der", " ", 
                "Grenzen", " ", "f\[UDoubleDot]r", " ", "expiratory", " ", 
                "flow", " ", "rate"}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"lbound", "=", 
                RowBox[{"maxposextract", "-", 
                 RowBox[{"FirstPosition", "[", 
                  RowBox[{
                   RowBox[{"Reverse", "[", 
                    RowBox[{"extract", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", "maxposextract"}], "]"}], "]"}], "]"}],
                    ",", 
                   RowBox[{"i_", "/;", 
                    RowBox[{"i", "<=", "1"}]}]}], "]"}]}]}], " ", 
               RowBox[{"(*", 
                RowBox[{"lowerbound", ":", " ", 
                 RowBox[{
                  RowBox[{
                  "Start", " ", "der", " ", "Expiration", " ", "ist", " ", 
                   "eine", " ", "Flowrate"}], " ", ">", " ", 
                  RowBox[{"1", " ", 
                   RowBox[{"m", "/", "s"}]}]}]}], "*)"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"uboundextract", "=", 
                RowBox[{"extract", "[", 
                 RowBox[{"[", 
                  RowBox[{"maxposextract", ";;", 
                   RowBox[{"(", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"maxposextract", "+", "50"}], "<", 
                    RowBox[{"Length", "@", "extract"}]}], ",", 
                    RowBox[{"maxposextract", "+", "50"}], ",", 
                    RowBox[{"Length", "@", "extract"}]}], "]"}], ")"}]}], 
                  "]"}], "]"}]}], " ", 
               RowBox[{"(*", 
                RowBox[{
                "5", " ", "sekunden", " ", "nach", " ", "Max", " ", 
                 "Position"}], "*)"}], ";", "\[IndentingNewLine]", 
               RowBox[{"ubound", "=", 
                RowBox[{"maxposextract", "+", 
                 RowBox[{"Length", "@", "uboundextract"}], "-", 
                 RowBox[{"FirstPosition", "[", 
                  RowBox[{
                   RowBox[{"Reverse", "@", "uboundextract"}], ",", 
                   RowBox[{"i_", "/;", 
                    RowBox[{"i", ">=", "1"}]}]}], "]"}]}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"bounds", "=", 
                RowBox[{"Flatten", "@", 
                 RowBox[{"{", 
                  RowBox[{"lbound", ",", "ubound"}], "}"}]}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"volexp", "=", 
                RowBox[{
                 RowBox[{"Total", "[", 
                  RowBox[{"extract", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"bounds", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ";;", 
                    RowBox[{"bounds", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "]"}], 
                 RowBox[{"1", "/", "10"}]}]}], " ", 
               RowBox[{"(*", 
                RowBox[{"expiratorisches", " ", "Volumen"}], "*)"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"maxflowex", "=", 
                RowBox[{"Max", "[", 
                 RowBox[{"extract", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"bounds", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ";;", 
                    RowBox[{"bounds", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "]"}]}], 
               ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                "Bestimmung", " ", "der", " ", "Grenzen", " ", "der", " ", 
                 "inspiratory", " ", "flow", " ", "rate"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"extractins", "[", 
                RowBox[{"[", "maxposextract", "]"}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"uboundins", "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"extractins", "[", 
                    RowBox[{"[", "maxposextract", "]"}], "]"}], "<=", 
                   RowBox[{"-", "1"}]}], ",", 
                  RowBox[{"maxposextract", "+", 
                   RowBox[{"FirstPosition", "[", 
                    RowBox[{
                    RowBox[{"extractins", "[", 
                    RowBox[{"[", 
                    RowBox[{"maxposextract", ";;", 
                    RowBox[{"Length", "@", "extractins"}]}], "]"}], "]"}], 
                    ",", 
                    RowBox[{"i_", "/;", 
                    RowBox[{"i", ">=", 
                    RowBox[{"-", "1"}]}]}]}], "]"}]}], " ", ",", 
                  RowBox[{"maxposextract", "-", 
                   RowBox[{"FirstPosition", "[", 
                    RowBox[{
                    RowBox[{"Reverse", "[", 
                    RowBox[{"extractins", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", "maxposextract"}], "]"}], "]"}], "]"}],
                     ",", 
                    RowBox[{"i_", "/;", 
                    RowBox[{"i", "<=", 
                    RowBox[{"-", "1"}]}]}]}], "]"}]}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"uboundins", "==", "\"\<NotFound\>\""}], ",", 
                 RowBox[{"uboundins", "=", "0"}], ",", 
                 RowBox[{"uboundins", "=", "uboundins"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"lboundins", "=", " ", 
                RowBox[{
                 RowBox[{"uboundins", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "-", 
                 RowBox[{"FirstPosition", "[", 
                  RowBox[{
                   RowBox[{"Reverse", "[", 
                    RowBox[{"extractins", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", 
                    RowBox[{"uboundins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "]"}], 
                   ",", 
                   RowBox[{"i_", "/;", 
                    RowBox[{"i", ">=", 
                    RowBox[{"-", "1"}]}]}]}], "]"}]}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"boundsins", "=", 
                RowBox[{"Flatten", "@", 
                 RowBox[{"{", 
                  RowBox[{"lboundins", ",", "uboundins"}], "}"}]}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"volins", "=", 
                RowBox[{
                 RowBox[{"Abs", "@", 
                  RowBox[{"Total", "[", 
                   RowBox[{"extractins", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ";;", 
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "]"}]}], 
                 RowBox[{"1", "/", "10"}]}]}], " ", 
               RowBox[{"(*", 
                RowBox[{"inspiratorisches", " ", "Volumen"}], "*)"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                "Das", " ", "inspiratorische", " ", "Volumen", " ", "muss", 
                 " ", "mindestens", " ", "300", " ", "ml", " ", "betragen"}], 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{"Until", "[", 
                RowBox[{
                 RowBox[{"volins", ">", "300"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"lboundins", "=", 
                   RowBox[{
                    RowBox[{"lboundins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", 
                    RowBox[{"FirstPosition", "[", 
                    RowBox[{
                    RowBox[{"Reverse", "[", 
                    RowBox[{"extractins", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", 
                    RowBox[{"lboundins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "]"}], 
                    ",", 
                    RowBox[{"i_", "/;", 
                    RowBox[{"i", ">=", 
                    RowBox[{"-", "1"}]}]}]}], "]"}]}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"boundsins", "=", 
                   RowBox[{"Flatten", "@", 
                    RowBox[{"{", 
                    RowBox[{"lboundins", ",", "uboundins"}], "}"}]}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"volins", "=", 
                   RowBox[{
                    RowBox[{"Abs", "@", 
                    RowBox[{"Total", "[", 
                    RowBox[{"extractins", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ";;", 
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "]"}]}], 
                    RowBox[{"1", "/", "10"}]}]}]}]}], " ", 
                RowBox[{"(*", 
                 RowBox[{"inspiratorisches", " ", "Volumen"}], "*)"}], 
                "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"maxflowin", "=", 
                RowBox[{"Abs", "[", 
                 RowBox[{"Min", "[", 
                  RowBox[{"extractins", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ";;", 
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "]"}], 
                 "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"Berechnung", " ", "Partikelsummenwerte"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"particles", "=."}], ";", "\[IndentingNewLine]", 
               RowBox[{"particles", "=", 
                RowBox[{"particlesextract", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", 
                   RowBox[{
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ";;", 
                    RowBox[{"-", "1"}]}]}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"particles", "=", 
                RowBox[{"Transpose", "@", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"Total", "[", 
                    RowBox[{
                    RowBox[{"particles", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"particles", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "*", "0.25"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", "2", ",", 
                    RowBox[{"Length", "@", "particles"}]}], "}"}]}], 
                  "]"}]}]}], ";", " ", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                  RowBox[{"particles", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], " ", "ist", " ", "delta"}],
                  "-", "OPC", "-", "time"}], "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                "Hier", " ", "Z\[ADoubleDot]hlratenstatistik", " ", 
                 "erg\[ADoubleDot]nzen"}], "*)"}], "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"particles", ",", 
                 RowBox[{"Total", "@", "particles"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"areaparticles", "=."}], ";", "\[IndentingNewLine]", 
               RowBox[{"areaparticles", "=", 
                RowBox[{"Flatten", "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{"Null", ",", 
                    RowBox[{
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}], ",", 
                   RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"Length", "@", "particlesextractsum"}], "-", 
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], "}"}]}]}], 
               ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"graphparticles", "=."}], ";", "\[IndentingNewLine]", 
               RowBox[{"graphparticles", "=", 
                RowBox[{"Labeled", "[", 
                 RowBox[{
                  RowBox[{"ListLinePlot", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"particlesextractsum", ",", "areaparticles"}], 
                    "}"}], ",", 
                    RowBox[{"ImageSize", "->", "Large"}], ",", 
                    RowBox[{"GridLines", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"Length", "@", "particlesextractsum"}]}], "}"}], 
                    ",", "None"}], "}"}]}], ",", 
                    RowBox[{"AxesLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<time in 1/10 s\>\"", ",", "\"\<counts/l\>\""}], 
                    "}"}]}], ",", 
                    RowBox[{"Filling", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", "\[Rule]", 
                    RowBox[{"{", "2", "}"}]}], "}"}]}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> GrayLevel[0.51]|>,
                    "GrayLevelColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> GrayLevel[0.51]|>,
                    "GrayLevelColorSwatchTemplate"]}], "}"}]}]}], "]"}], ",", 
                  RowBox[{"\"\<Total Particle Count \>\"", "~~", 
                   RowBox[{"ToString", "@", 
                    RowBox[{"Round", "@", 
                    RowBox[{"particles", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}]}]}], ",", "Top", ",", 
                  RowBox[{"ImageMargins", "\[Rule]", "0"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"Berechnung", " ", "der", " ", "Zeiten"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"correx", "=."}], ";", "\[IndentingNewLine]", 
               RowBox[{"correx", "=", "0.2"}], ";", " ", 
               RowBox[{"(*", 
                RowBox[{"Korrekturfaktor", " ", "als", " ", 
                 RowBox[{"Schwelle", ":", " ", 
                  RowBox[{
                  "20", "%", " ", "von", " ", "maximaler", " ", "expiratory", 
                   " ", "flow", " ", "rate"}]}]}], "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", "Expiration", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"posstartexp", "=."}], ";", "\[IndentingNewLine]", 
               RowBox[{"posstartexp", "=", 
                RowBox[{
                 RowBox[{"FirstPosition", "[", 
                  RowBox[{
                   RowBox[{"extract", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"bounds", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ";;", 
                    RowBox[{"bounds", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], ",", 
                   RowBox[{"i_", "/;", 
                    RowBox[{"i", ">=", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"extract", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"bounds", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ";;", 
                    RowBox[{"bounds", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "]"}], 
                    "*", "correx"}]}]}]}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]",
                "\[IndentingNewLine]", 
               RowBox[{"posendexp", "=."}], ";", "\[IndentingNewLine]", 
               RowBox[{"posendexp", "=", 
                RowBox[{
                 RowBox[{"Length", "@", 
                  RowBox[{"extract", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"bounds", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ";;", 
                    RowBox[{"bounds", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"FirstPosition", "[", 
                   RowBox[{
                    RowBox[{"Reverse", "[", 
                    RowBox[{"extract", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"bounds", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ";;", 
                    RowBox[{"bounds", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "]"}], 
                    ",", 
                    RowBox[{"i_", "/;", 
                    RowBox[{"i", ">=", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"extract", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"bounds", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ";;", 
                    RowBox[{"bounds", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "]"}], 
                    "*", "correx"}]}]}]}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"texpreal", "=", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"extracttime", "[", 
                    RowBox[{"[", "posendexp", "]"}], "]"}], "-", 
                   RowBox[{"extracttime", "[", 
                    RowBox[{"[", "posstartexp", "]"}], "]"}]}], ")"}], "/", 
                 "1000"}]}], ";", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", "Inspiration", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"corrin", "=."}], ";", "\[IndentingNewLine]", 
               RowBox[{"corrin", "=", "0.2"}], ";", " ", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"Korrekturfaktor", " ", "als", " ", 
                  RowBox[{"Schwelle", ":", " ", 
                   RowBox[{
                   "20", "%", " ", "von", " ", "maximaler", " ", 
                    "inspiratory", " ", "flow", " ", "rate"}]}]}], ";", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "f\[UDoubleDot]r", " ", "t_insp", " ", "1", " ", "und", 
                    " ", "min", " ", "ist", " ", "der", " ", 
                    "Korrekturfaktor", " ", "aber", " ", "zu", " ", "klein"}],
                    "..."}], " ", "->", " ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Kalibrierung", " ", "n\[ODoubleDot]tig"}], 
                    "..."}], "."}]}]}], "*)"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"posstartinsp", "=."}], ";", "\[IndentingNewLine]", 
               RowBox[{"posstartinsp", "=", 
                RowBox[{
                 RowBox[{"FirstPosition", "[", 
                  RowBox[{
                   RowBox[{"extractins", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ";;", 
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], ",", 
                   RowBox[{"i_", "/;", 
                    RowBox[{"i", "<=", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"extractins", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ";;", 
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "]"}], 
                    "*", "corrin"}]}]}]}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]",
                "\[IndentingNewLine]", 
               RowBox[{"posendinsp", "=."}], ";", "\[IndentingNewLine]", 
               RowBox[{"posendinsp", "=", 
                RowBox[{
                 RowBox[{"Length", "@", 
                  RowBox[{"extractins", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ";;", 
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"FirstPosition", "[", 
                   RowBox[{
                    RowBox[{"Reverse", "[", 
                    RowBox[{"extractins", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ";;", 
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "]"}], 
                    ",", 
                    RowBox[{"i_", "/;", 
                    RowBox[{"i", "<=", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"extractins", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ";;", 
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "]"}], 
                    "*", "corrin"}]}]}]}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"tinspreal", "=", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"extracttime", "[", 
                    RowBox[{"[", "posendinsp", "]"}], "]"}], "-", 
                   RowBox[{"extracttime", "[", 
                    RowBox[{"[", "posstartinsp", "]"}], "]"}]}], ")"}], "/", 
                 "1000"}]}], ";", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                "Erstellung", " ", "von", " ", "graphischen", " ", "Listen", 
                 " ", "zum", " ", "Anzeigen", " ", "der", " ", "Area", " ", 
                 "under", " ", "the", " ", "curve"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"areains", "=."}], ";", "\[IndentingNewLine]", 
               RowBox[{"areains", "=", 
                RowBox[{"Flatten", "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{"Null", ",", 
                    RowBox[{
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}], ",", 
                   RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "-", 
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ",", 
                   RowBox[{"Table", "[", 
                    RowBox[{"Null", ",", 
                    RowBox[{
                    RowBox[{"Length", "@", "extractins"}], "-", " ", 
                    RowBox[{"boundsins", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], "}"}]}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"areaexp", "=."}], ";", "\[IndentingNewLine]", 
               RowBox[{"areaexp", "=", 
                RowBox[{"Flatten", "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{"Null", ",", 
                    RowBox[{
                    RowBox[{"bounds", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}], ",", 
                   RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"bounds", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "-", 
                    RowBox[{"bounds", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ",", 
                   RowBox[{"Table", "[", 
                    RowBox[{"Null", ",", 
                    RowBox[{
                    RowBox[{"Length", "@", "extract"}], "-", " ", 
                    RowBox[{"bounds", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], "}"}]}]}], 
               ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"linetexpreal", "=."}], ";", "\[IndentingNewLine]", 
               RowBox[{"linetexpreal", "=", 
                RowBox[{"Flatten", "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{"Null", ",", 
                    RowBox[{"posstartexp", "+", 
                    RowBox[{"bounds", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ",", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"maxflowex", "*", "correx"}], ",", 
                    RowBox[{"posendexp", "-", "posstartexp"}]}], "]"}], ",", 
                   RowBox[{"Table", "[", 
                    RowBox[{"Null", ",", 
                    RowBox[{
                    RowBox[{"Length", "@", "extract"}], "-", " ", 
                    "posendexp"}]}], "]"}]}], "}"}]}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"linetinspreal", "=."}], ";", "\[IndentingNewLine]", 
               RowBox[{"linetinspreal", "=", 
                RowBox[{"Flatten", "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{"Null", ",", 
                    RowBox[{"posstartinsp", "+", 
                    RowBox[{"lboundins", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ",", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "maxflowin"}], "*", "corrin"}], ",", 
                    RowBox[{"posendinsp", "-", "posstartinsp"}]}], "]"}], ",", 
                   RowBox[{"Table", "[", 
                    RowBox[{"Null", ",", 
                    RowBox[{
                    RowBox[{"Length", "@", "extractins"}], "-", " ", 
                    "posendinsp"}]}], "]"}]}], "}"}]}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"graphische", " ", "Darstellung"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"graphflow", "=."}], ";", "\[IndentingNewLine]", 
               RowBox[{"graphflow", "=", 
                RowBox[{"Labeled", "[", 
                 RowBox[{
                  RowBox[{"ListLinePlot", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "extractins", ",", "extract", ",", "areains", ",", 
                    "areaexp", ",", "linetinspreal", ",", "linetexpreal", ",", 
                    RowBox[{"Legended", "[", 
                    RowBox[{
                    "extractins", ",", "\"\<inspiratory flow rate\>\""}], 
                    "]"}], ",", 
                    RowBox[{"Legended", "[", 
                    RowBox[{"extract", ",", "\"\<expiratory flow rate\>\""}], 
                    "]"}], ",", 
                    RowBox[{"Legended", "[", 
                    RowBox[{
                    "linetinspreal", ",", "\"\<inspiratory time\>\""}], "]"}],
                     ",", 
                    RowBox[{"Legended", "[", 
                    RowBox[{"linetexpreal", ",", "\"\<expiratory time\>\""}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"Filling", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "\[Rule]", 
                    RowBox[{"{", "3", "}"}]}], ",", 
                    RowBox[{"2", "->", 
                    RowBox[{"{", "4", "}"}]}]}], "}"}]}], ",", 
                    RowBox[{"AxesLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"\<time in 1/10 s\>\"", ",", "\"\<ml/s\>\""}], 
                    "}"}]}], ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"GridLines", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", "maxposextract", "}"}], ",", "uboundins", 
                    ",", "lboundins"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"extract", "[", 
                    RowBox[{"[", 
                    RowBox[{"bounds", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
                    RowBox[{"extract", "[", 
                    RowBox[{"[", 
                    RowBox[{"bounds", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], "}"}]}], 
                    "}"}]}], ","}], "*)"}], 
                    RowBox[{"PlotRange", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Min", "@", "extractins"}], ",", 
                    RowBox[{"Max", "@", "extract"}]}], "}"}]}], ",", 
                    RowBox[{"ImageSize", "->", "Large"}]}], "]"}], ",", 
                  RowBox[{"\"\<invalid \>\"", "~~", 
                   RowBox[{"ToString", "@", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "]"}]}], "~~", 
                   "\"\<\\ninspiratory volume ml \>\"", " ", "~~", 
                   RowBox[{"ToString", "@", 
                    RowBox[{"Round", "@", "volins"}]}], "  ", "~~", " ", 
                   "\"\<\\nexpiratory volume ml \>\"", "~~", 
                   RowBox[{"ToString", "@", 
                    RowBox[{"Round", "@", "volexp"}]}], "~~", 
                   "\"\<\\nV_target l \>\"", "~~", 
                   RowBox[{"ToString", "@", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "3"}], "]"}], "]"}]}], "~~", 
                   "\"\<\\nt_insp_real s \>\"", "~~", 
                   RowBox[{"ToString", "@", "tinspreal"}], "~~", 
                   "\"\<\\nt_insp_target s \>\"", "~~", 
                   RowBox[{"ToString", "@", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "4"}], "]"}], "]"}]}], " ", "~~", 
                   "\"\<\\nt_exp_real s \>\"", "~~", 
                   RowBox[{"ToString", "@", "texpreal"}], "~~", 
                   "\"\<\\nt_exp_target s 3\>\"", "~~", 
                   "\"\<\\nmax flow insp ml/s \>\"", "~~", " ", 
                   RowBox[{"ToString", "@", 
                    RowBox[{"Round", "@", "maxflowin"}]}], "~~", 
                   "\"\<\\nmax flow exp ml/s \>\"", "~~", " ", 
                   RowBox[{"ToString", "@", 
                    RowBox[{"Round", "@", "maxflowex"}]}]}], ",", "Top"}], 
                 "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                 "Berechnung", " ", "der", " ", "G\[UDoubleDot]te", " ", 
                  "von", " ", "geatmeten", " ", 
                  RowBox[{"Volumina", ":", " ", "Equality"}]}], ",", " ", 
                 "Accuracy"}], "*)"}], "\[IndentingNewLine]", 
               RowBox[{"equ", "=."}], ";", "\[IndentingNewLine]", 
               RowBox[{"equ", "=", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"volexp", "/", "volins"}], ")"}], "*", "100"}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"vtarget", "=."}], ";", "\[IndentingNewLine]", 
               RowBox[{"vtarget", "=", 
                RowBox[{"times", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", "3"}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"Clear", "[", 
                RowBox[{"acc", ",", "dexp", ",", "dinsp"}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"NumberQ", "[", "vtarget", "]"}], ",", 
                 RowBox[{
                  RowBox[{"dexp", " ", "=", " ", 
                   RowBox[{"volexp", " ", "-", "vtarget"}]}], ";", 
                  RowBox[{"dinsp", " ", "=", " ", 
                   RowBox[{"volins", " ", "-", "vtarget"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"dexp", "==", "0"}], "&&", " ", 
                    RowBox[{"dinsp", "==", "0"}]}], ")"}], ",", 
                    RowBox[{"acc", "=", "100"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"dinsp", "<", "dexp"}], ")"}], "||", 
                    RowBox[{"(", 
                    RowBox[{"dexp", "<", "dinsp"}], ")"}]}], ",", 
                    RowBox[{"acc", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Max", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Abs", "@", "dinsp"}], ",", 
                    RowBox[{"Abs", "@", "dexp"}]}], "}"}]}], "/", "vtarget"}],
                     "/", "100"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"dexp", ">", "0"}], " ", "&&", " ", 
                    RowBox[{"dinsp", "<", "0"}]}], " ", ")"}], "||", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"dinsp", ">", "0"}], " ", "&&", " ", 
                    RowBox[{"dexp", "<", "0"}]}], " ", ")"}]}], ",", 
                    RowBox[{"acc", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Abs", "@", "dexp"}], "+", 
                    RowBox[{"Abs", "@", "dinsp"}]}], ")"}], "/", "vtarget"}], 
                    "/", "100"}]}]}], "]"}]}], ",", "vtarget"}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"exportdata", ",", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"{", 
                   RowBox[{
                   "vtarget", ",", "volins", ",", "volexp", ",", "equ", ",", 
                    "acc", ",", "maxflowin", ",", "maxflowex", ",", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "4"}], "]"}], "]"}], ",", "tinspreal", 
                    ",", "3", ",", "texpreal", ",", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "5"}], "]"}], "]"}], ",", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "6"}], "]"}], "]"}], ",", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "]"}], ",", 
                    RowBox[{"Floor", "/@", "particles"}]}], "}"}], "]"}]}], 
                "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"tiffexport", ",", "\[IndentingNewLine]", 
                 RowBox[{"Framed", "[", 
                  RowBox[{"GraphicsGrid", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "graphflow", "}"}], ",", 
                    RowBox[{"{", "graphparticles", "}"}]}], "}"}], ",", 
                    RowBox[{"ImageSize", "->", "750"}], ",", 
                    RowBox[{"ItemAspectRatio", "\[Rule]", ".7"}]}], "]"}], 
                  "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", ",", "Nothing"}], "]"}]}], "]"}]}], 
         ")"}], "&"}], ",", "positions"}], "]"}], ";"}], 
    "\[IndentingNewLine]", 
    RowBox[{"TableForm", "@", "exportdata"}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "\n"}]}]], "Input",ExpressionUUID->
  "cc943773-e183-4776-90eb-ca3ac3363631"],
 "\n",
 Cell[BoxData[
  RowBox[{"\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
      "\"\<D:\\\\Daten\\\\b1464\\\\Downloads\\\\\>\"", "~~", "ID", "~~", 
       "\"\< evaluation graphic.tiff\>\""}], ",", "tiffexport", ",", 
      RowBox[{"ImageResolution", "->", "250"}]}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i", "=."}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"i", "=", "0"}], ";"}], "\[IndentingNewLine]", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"i", "=", 
          RowBox[{"i", "+", "1"}]}], ";", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{
           "outp", "~~", "\"\<\\\\Messverlauf\\\\\>\"", " ", "~~", "ID", 
            "~~", "\"\<\\\\\>\"", "~~", "ID", "~~", 
            "\"\< evaluation graphic\>\"", "~~", "\"\< _ \>\"", "~~", " ", 
            RowBox[{"ToString", "@", "i"}], "~~", "\"\<.svg\>\""}], ",", 
           "#"}], "]"}]}], ")"}], "&"}], ",", "tiffexport"}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
      "outp", "~~", "\"\<\\\\Messverlauf\\\\\>\"", " ", "~~", "ID", "~~", 
       "\"\< evaluation graphic.tiff\>\""}], ",", "tiffexport"}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{
       "outp", "~~", 
        "\"\<\\\\Datenexport\\\\evaluated Pexa measurements.xlsx\>\""}], ",", 
       "exportdata"}], "]"}], "*)"}], "\[IndentingNewLine]"}]}]], "Input",
  ExpressionUUID->"d5c2ce2f-aedb-44fe-accf-70ab448c9204"]
}], "Subtitle",
 CellChangeTimes->{{3.890986978942924*^9, 3.890986981926728*^9}, {
   3.919508469901431*^9, 3.9195084709584303`*^9}, 3.919508524574346*^9, {
   3.9195085852166514`*^9, 
   3.919508608692255*^9}},ExpressionUUID->"04df89b1-afc8-4464-aa94-\
c80bc622a841"],

Cell["Previous functions", "Subtitle",
 CellChangeTimes->{{3.890986978942924*^9, 3.890986981926728*^9}},
 FontColor->RGBColor[1, 0, 0],
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"855ccd11-6651-47ee-b810-d0c41ff5b130"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "bei", " ", "01", " ", "wurde", " ", "an", " ", "Zeitpunkt", " ", 
      "6383000", " ", "ms", " ", "die", " ", "Pexa"}], "-", 
     RowBox[{
     "Aufnahme", " ", "aus", " ", "Versehen", " ", "f\[UDoubleDot]r", " ", 
      "etwa", " ", "7", " ", "sec", " ", "gestoppt"}]}], ",", " ", 
    RowBox[{
    "au\[SZ]erdem", " ", "gab", " ", "es", " ", "eine", " ", 
     "einst\[UDoubleDot]ndige", " ", "Pause"}], ",", " ", 
    RowBox[{
    "w\[ADoubleDot]hrend", " ", "der", " ", "die", " ", "Messung", " ", 
     "weiter", " ", "lief"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"timedelaysplit", "=."}], "\[IndentingNewLine]", 
   RowBox[{"timedelaysplit", "=", 
    RowBox[{
     RowBox[{"FirstPosition", "[", 
      RowBox[{
       RowBox[{"Rest", "@", 
        RowBox[{"dataPEXA", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", 
       RowBox[{"n_", "/;", 
        RowBox[{"n", ">=", "6383000"}]}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timedelaysplit", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Rest", "@", 
           RowBox[{"dataPEXA", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], 
          RowBox[{"(", 
           RowBox[{"1", "/", "60000"}], ")"}]}], ",", 
         RowBox[{"Rest", "@", 
          RowBox[{"dataPEXA", "[", 
           RowBox[{"[", "21", "]"}], "]"}]}]}], "}"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"timedelaysplit", ";;", 
        RowBox[{"Last", "@", 
         RowBox[{"Last", "@", "positions"}]}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Ausschnit", " ", "graphische", " ", "Darstellung", " ", "des", " ", 
     "Messprotokolls", " ", "in", " ", "Minuten"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"graphicProtocol", "=."}], "\[IndentingNewLine]", 
   RowBox[{"graphicProtocol", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"timedelaysplit", ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", " ", "@", 
           RowBox[{"times", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", 
              RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], 
          RowBox[{"(", 
           RowBox[{"1", "/", "60000"}], ")"}]}], ",", "None"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "2000"}], ",", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"Last", "@", 
             RowBox[{"dataPEXA", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], 
            RowBox[{"(", 
             RowBox[{"1", "/", "60000"}], ")"}]}], ",", "1"}], "]"}], ",", 
         "Automatic"}], "}"}]}], ",", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"FontSize", "\[Rule]", "2"}], "]"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<time in min\>\"", ",", "\"\<Particles / liter\>\""}], 
        "}"}]}]}], "]"}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.88736141865659*^9, 3.887361458409356*^9}, {
   3.8873615448056173`*^9, 3.887361624842597*^9}, {3.8873616784995213`*^9, 
   3.887361815332448*^9}, {3.887361846325881*^9, 3.8873618482745314`*^9}, {
   3.887364365813202*^9, 3.8873643796069756`*^9}, {3.8873646553266106`*^9, 
   3.887364685069107*^9}, 3.88898247707132*^9, {3.8895030963421164`*^9, 
   3.8895030988406377`*^9}},ExpressionUUID->"6afc29d3-e8d7-4b40-82bc-\
50c18ac78cc8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Graphische", " ", "Darstellung", " ", "des", " ", "Messprotokolls", " ", 
    "in", " ", "Minuten"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"graphicProtocol", "=."}], "\[IndentingNewLine]", 
   RowBox[{"graphicProtocol", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Rest", "@", 
           RowBox[{"dataPEXA", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], 
          RowBox[{"(", 
           RowBox[{"1", "/", "60000"}], ")"}]}], ",", 
         RowBox[{"Rest", "@", 
          RowBox[{"dataPEXA", "[", 
           RowBox[{"[", "21", "]"}], "]"}]}]}], "}"}]}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", " ", "@", 
           RowBox[{"times", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", 
              RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], 
          RowBox[{"(", 
           RowBox[{"1", "/", "60000"}], ")"}]}], ",", "None"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "4000"}], ",", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"Last", "@", 
             RowBox[{"dataPEXA", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], 
            RowBox[{"(", 
             RowBox[{"1", "/", "60000"}], ")"}]}], ",", "1"}], "]"}], ",", 
         "Automatic"}], "}"}]}], ",", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"FontSize", "\[Rule]", "2"}], "]"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<time in min\>\"", ",", "\"\<Particles / liter\>\""}], 
        "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{
       "\"\<H:\\\\Datenerhebung und Auswertung\\\\Ausgabe\\\\\>\"", "~~", 
        "ID", "~~", "\"\<manuelle Ausgabe.jpg\>\""}], ",", "graphicProtocol", 
       ",", 
       RowBox[{"ImageResolution", "->", "2000"}]}], "]"}], ";"}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.8862406057908387`*^9, 3.8862406329266605`*^9}, {
   3.886240803493189*^9, 3.8862408134962225`*^9}, {3.8862409032674866`*^9, 
   3.8862409035019965`*^9}, {3.8862409708585076`*^9, 3.886241000942342*^9}, {
   3.88624103735573*^9, 3.886241107491742*^9}, {3.8862411603430233`*^9, 
   3.886241160793688*^9}, 3.8862411952597637`*^9, {3.8862412452034903`*^9, 
   3.8862412472225084`*^9}, {3.8862412844819193`*^9, 3.886241297543193*^9}, {
   3.886241510061879*^9, 3.886241524450403*^9}, {3.886499314278674*^9, 
   3.886499334612203*^9}, {3.886499383550438*^9, 3.8864994068359413`*^9}, {
   3.8864994534834023`*^9, 3.8864994731645145`*^9}, {3.8864995183560467`*^9, 
   3.8864995585855293`*^9}, {3.8864995911967363`*^9, 3.886499592316431*^9}, {
   3.8864996263270235`*^9, 3.886499627209216*^9}, {3.886499756819709*^9, 
   3.886499820856224*^9}, {3.8864998557995605`*^9, 3.8864998584702177`*^9}, {
   3.886575906190037*^9, 3.8865759095362196`*^9}, {3.8865783169770403`*^9, 
   3.8865783337161655`*^9}, {3.8873647123877115`*^9, 3.8873647173621655`*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"7ed6b274-0816-43d0-86db-2b7ddebbabee"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"particles", "=."}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"particles", "=", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"dataPEXA", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ";;", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "*", 
             RowBox[{
              RowBox[{"dataPEXA", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ";;", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "*", 
             "0.25"}], "]"}], "&"}], ",", "positions"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "5", ",", "20"}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"particlesum", "=."}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"particlesum", " ", "=", " ", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Total", "[", "#", "]"}], "&"}], ",", "particles"}], "]"}]}], 
    ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Summierte", " ", "Partikelanzahl"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"resultlist", "=."}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"resultlist", "=", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{"particlesum", ",", 
        RowBox[{"times", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"3", ";;", "7"}]}], "]"}], "]"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"resultlist", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "=", 
     RowBox[{"Round", "/@", 
      RowBox[{"resultlist", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"TableForm", "@", "resultlist"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Select", "[", 
      RowBox[{"resultlist", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}], "==", "2"}], "&"}]}], "]"}],
      ";"}], " ", 
    RowBox[{"(*", "exemplarisch", "*)"}], "\[IndentingNewLine]", "*)"}], "\n",
    "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Partikelanzahl", " ", "nach", " ", "Bin"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"resultlistparticles", "=."}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"resultlistparticles", "=", " ", 
     RowBox[{"Transpose", "@", " ", 
      RowBox[{"{", 
       RowBox[{"particles", ",", 
        RowBox[{"times", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"3", ";;", "7"}]}], "]"}], "]"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"resultlistparticles", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1", ",", "All"}], "]"}], "]"}], "=", 
     RowBox[{"Round", "/@", 
      RowBox[{"resultlistparticles", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1", ",", "All"}], "]"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"exportdata", "=."}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"exportdata", "=", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
       "\"\<inspiration/expiration volume\>\"", ",", 
        "\"\<inspiration time\>\"", ",", 
        "\"\<breaths from HEPA tube before expiration in PExA\>\"", ",", 
        "\"\<volume of breaths before expiration in PExa\>\"", ",", 
        "\"\<invalid (0 no, 1 yes)\>\"", ",", 
        "\"\<Particles > 0.31 - 0.38 \[Micro]m\>\"", ",", " ", 
        "\"\<Particles 0.38 - 0.45 \[Micro]m\>\"", ",", " ", 
        "\"\<Particles 0.45 - 0.56 \[Micro]m\>\"", ",", " ", 
        "\"\<Particles 0.56 - 0.70 \[Micro]m\>\"", ",", " ", 
        "\"\<Particles 0.70 - 0.94 \[Micro]m\>\"", ",", " ", 
        "\"\<Particles 0.94 - 1.15 \[Micro]m\>\"", ",", " ", 
        "\"\<Particles 1.15 - 1.28 \[Micro]m\>\"", ",", " ", 
        "\"\<Particles 1.28 - 1.38 \[Micro]m\>\"", ",", " ", 
        "\"\<Particles 1.38 - 1.47 \[Micro]m\>\"", ",", " ", 
        "\"\<Particles 1.47 - 1.57  \[Micro]m\>\"", ",", " ", 
        "\"\<Particles 1.57 - 1.69  \[Micro]m\>\"", ",", " ", 
        "\"\<Particles 1.69 - 1.89  \[Micro]m\>\"", ",", " ", 
        "\"\<Particles 1.89 - 2.16  \[Micro]m\>\"", ",", " ", 
        "\"\<Particles 2.16 - 2.52  \[Micro]m\>\"", ",", " ", 
        "\"\<Particles 2.52 - 3.42  \[Micro]m\>\"", ",", " ", 
        "\"\<Particles > 3.42  \[Micro]m\>\"", ",", " ", 
        "\"\<Sum all Particles\>\""}], "}"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"exportdata", "=", 
     RowBox[{"FlattenAt", "[", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"exportdata", ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Flatten", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
               RowBox[{"Total", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "&"}], ",", 
           RowBox[{"Transpose", "@", " ", 
            RowBox[{"{", 
             RowBox[{"particles", ",", 
              RowBox[{"times", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"3", ";;", "7"}]}], "]"}], "]"}]}], "}"}]}]}], 
          "]"}]}], "]"}], ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
     "\"\<D:\\\\Daten\\\\b1464\\\\Downloads\\\\\>\"", "~~", "ID", "~~", 
      "\"\< data.xlsx\>\""}], ",", "exportdata"}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8862403589058185`*^9, 3.886240359230519*^9}, {
   3.8862404034034758`*^9, 3.8862405043744173`*^9}, 3.886662599918285*^9, {
   3.8866626350543537`*^9, 3.8866626355797043`*^9}, {3.8866634093908277`*^9, 
   3.886663458366027*^9}, {3.886667387155692*^9, 3.886667388756186*^9}, {
   3.886667640217252*^9, 3.886667641723397*^9}, {3.887775703959526*^9, 
   3.8877757400178103`*^9}, {3.890987176710488*^9, 3.890987180314006*^9}, {
   3.8909915163178864`*^9, 
   3.89099153562838*^9}},ExpressionUUID->"434c3156-85e8-4968-ad4d-\
faf6f02f67fc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"barchartParticlesCleaning", "[", 
    RowBox[{"data_List", ",", "vselect_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"labeleddata", ",", "temp", ",", "cond"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"temp", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"data", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "1"}], "]"}], "]"}], "==", "vselect"}], 
              "&"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"data", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "1"}], "]"}], "]"}], "==", "vselect"}], 
              "&"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{"Bottom", ",", 
            RowBox[{"Length", "[", 
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{"data", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "==", "vselect"}], 
                 "&"}]}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"data", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "1"}], "]"}], "]"}], "==", "vselect"}], 
              "&"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2", ",", 
             RowBox[{"-", "3"}]}], "]"}], "]"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"temp", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], "&"}], ",", "temp"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"cond", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Last", "[", 
           RowBox[{"#", ",", 
            RowBox[{"-", "1"}]}], "]"}], "&"}], ",", "temp"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cond", "=", 
       RowBox[{"cond", "+", "1"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
         "es", " ", "gab", " ", "immer", " ", "mindestens", " ", "einen", " ",
           "Atemzug", " ", "aus", " ", "dem", " ", "HEPA"}], "-", 
         "Schlauch"}], ",", " ", 
        RowBox[{"0", " ", "->", " ", "1"}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"2", "..."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"labeleddata", "=", " ", 
       RowBox[{"MapApply", "[", 
        RowBox[{"Labeled", ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Drop", "[", 
             RowBox[{"#", ",", 
              RowBox[{"-", "1"}]}], "]"}], "&"}], ",", "temp"}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"labeleddata", "=", 
       RowBox[{
        RowBox[{"ReverseSort", "/@", 
         RowBox[{
          RowBox[{"SplitBy", "[", 
           RowBox[{
            RowBox[{"Transpose", "@", 
             RowBox[{"{", 
              RowBox[{"cond", ",", "labeleddata"}], "}"}]}], ",", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "&"}]}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "All", ",", "2"}], "]"}], "]"}]}], "/.", 
        RowBox[{
         RowBox[{"{", "}"}], "->", 
         RowBox[{"{", "0", "}"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Labeled", "[", 
       RowBox[{
        RowBox[{"BarChart", "[", 
         RowBox[{"labeleddata", ",", 
          RowBox[{"ChartLabels", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Union", "@", "cond"}], ",", "None"}], "}"}]}], ",", 
          RowBox[{"ImageSize", "->", "Large"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Breaths from HEPA tube before\\n expiration in PExA\>\"", 
             ",", "\"\<Particles per breath\>\""}], "}"}]}], ",", 
          RowBox[{"BarSpacing", "\[Rule]", "0"}], ",", 
          RowBox[{"ChartStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "Red", ",", "Green", ",", "Gray", ",", "Yellow", ",", "Pink", 
               ",", 
               RowBox[{"Lighter", "@", "Blue"}], ",", "Orange"}], "}"}], ",", 
             "None"}], "}"}]}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"ToString", "@", "vselect"}], "~~", "\"\< l V_insp\>\""}], 
        ",", "Top"}], "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]",
     "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"evaluation", "[", "files_List", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ID", ",", "dataPEXA", ",", "dataLOG", ",", "starttime", ",", "times", 
       ",", "positions", ",", "graphicProtocol", ",", "particles", ",", 
       "particlesum", ",", "resultlist", ",", "resultlistparticles", ",", 
       "chart", ",", "exportdata"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"ID", "=", 
        RowBox[{"StringCases", "[", 
         RowBox[{
          RowBox[{"files", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{
           "\"\<23\\\\\>\"", "~~", "x__", "~~", "\"\<_protocol.txt\>\""}], "->",
            "x"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ID", "=", 
        RowBox[{"ID", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"dataPEXA", "=", 
        RowBox[{"Transpose", "@", 
         RowBox[{
          RowBox[{"Import", "[", 
           RowBox[{"files", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Umrechnen", " ", "der", " ", "elapsed", " ", "time", " ", "auf", " ",
          "ms"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"dataPEXA", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "=", 
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Rest", "@", 
            RowBox[{"dataPEXA", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "*", "1000"}], ",", 
          RowBox[{"First", "@", 
           RowBox[{"dataPEXA", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dataPEXA", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"dataLOG", "=", 
        RowBox[{"Import", "[", 
         RowBox[{"files", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", "Protokollaufbereitung", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"starttime", "=", 
        RowBox[{
         RowBox[{"ToExpression", "[", 
          RowBox[{"StringCases", "[", 
           RowBox[{"dataLOG", ",", 
            RowBox[{
             RowBox[{"\"\<PExA Start :: \>\"", " ", "~~", " ", 
              RowBox[{"Shortest", "[", "x__", "]"}], " ", "~~", 
              "\"\< ---\>\""}], "->", "x"}]}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"times", "=", 
        RowBox[{"StringCases", "[", 
         RowBox[{"dataLOG", ",", 
          RowBox[{
           RowBox[{
           "\"\<Anmerkungen --- \>\"", " ", "~~", " ", "x__", " ", "~~", " ", 
            "\"\< --- Fragebogen\>\""}], "->", "x"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"times", "=", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"times", ",", 
          RowBox[{"\"\<, -\>\"", "->", "\"\<,nv -\>\""}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"times", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"StringSplit", "[", 
          RowBox[{"times", ",", "\"\< --- \>\""}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"times", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringSplit", "[", 
            RowBox[{"#", ",", "\"\<,\>\""}], "]"}], "&"}], ",", "times"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"times", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"1", ";;", 
            RowBox[{"-", "2"}]}]}], "]"}], "]"}], "=", " ", 
        RowBox[{"ToExpression", "/@", 
         RowBox[{"times", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"1", ";;", 
             RowBox[{"-", "2"}]}]}], "]"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"times", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"times", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "-", "starttime"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"times", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"times", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "-", "starttime"}]}], ";",
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Abschnitte", " ", "in", " ", "dataPEXA", " ", "finden"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"positions", "=", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"FirstPosition", "[", 
              RowBox[{
               RowBox[{"Rest", "[", 
                RowBox[{"dataPEXA", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
               RowBox[{"n_", "/;", 
                RowBox[{"n", ">=", "#"}]}]}], "]"}], "&"}], ",", 
            RowBox[{"Flatten", "[", 
             RowBox[{"times", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", 
                RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], "]"}]}], "]"}], ",",
           "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"positions", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", "#", "]"}], "&"}], ",", "positions", ",", 
          RowBox[{"{", "1", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"graphicProtocol", "=", 
        RowBox[{"ListLinePlot", "[", 
         RowBox[{
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Rest", "@", 
               RowBox[{"dataPEXA", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], 
              FractionBox["1", "60000"]}], ",", 
             RowBox[{"Rest", "@", 
              RowBox[{"dataPEXA", "[", 
               RowBox[{"[", "21", "]"}], "]"}]}]}], "}"}]}], ",", 
          RowBox[{"GridLines", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Flatten", " ", "@", 
               RowBox[{"times", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", 
                  RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], 
              FractionBox["1", "60000"]}], ",", "None"}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "4000"}], ",", 
          RowBox[{"Ticks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", 
               RowBox[{
                RowBox[{"Last", "@", 
                 RowBox[{"dataPEXA", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], 
                FractionBox["1", "60000"]}], ",", "1"}], "]"}], ",", 
             "Automatic"}], "}"}]}], ",", 
          RowBox[{"AxesStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"FontSize", "\[Rule]", "2"}], "]"}]}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<time in min\>\"", ",", "\"\<Particles / liter\>\""}],
             "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{
         "outp", "~~", "\"\<Messverlauf\\\\Messverlauf \>\"", "~~", "ID", 
          "~~", "\"\<.jpg\>\""}], ",", "graphicProtocol", ",", 
         RowBox[{"ImageResolution", "->", "2000"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"particles", "=", "\[IndentingNewLine]", 
        RowBox[{"Transpose", "@", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Total", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"dataPEXA", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ";;", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "*", 
                RowBox[{
                 RowBox[{"dataPEXA", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ";;", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "*", 
                "0.25"}], "]"}], "&"}], ",", "positions"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "5", ",", "20"}], "}"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"particlesum", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", "#", "]"}], "&"}], ",", "particles"}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Summierte", " ", "Partikelanzahl"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"resultlist", "=", 
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{"particlesum", ",", 
           RowBox[{"times", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", 
              RowBox[{"3", ";;", "7"}]}], "]"}], "]"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"resultlist", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "=", 
        RowBox[{"Round", "/@", 
         RowBox[{"resultlist", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", "\n", 
       RowBox[{"(*", 
        RowBox[{"Partikelanzahl", " ", "nach", " ", "Bin"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"resultlistparticles", "=", " ", 
        RowBox[{"Transpose", "@", " ", 
         RowBox[{"{", 
          RowBox[{"particles", ",", 
           RowBox[{"times", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", 
              RowBox[{"3", ";;", "7"}]}], "]"}], "]"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"resultlistparticles", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1", ",", "All"}], "]"}], "]"}], "=", 
        RowBox[{"Round", "/@", 
         RowBox[{"resultlistparticles", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1", ",", "All"}], "]"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Export", " ", "der", " ", "berechneten", " ", "Partikel"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"exportdata", "=", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
          "\"\<inspiration/expiration volume\>\"", ",", 
           "\"\<inspiration time\>\"", ",", 
           "\"\<breaths from HEPA tube before expiration in PExA\>\"", ",", 
           "\"\<volume of breaths before expiration in PExa\>\"", ",", 
           "\"\<invalid (0 no, 1 yes)\>\"", ",", 
           "\"\<Particles > 0.31 - 0.38 \[Micro]m\>\"", ",", " ", 
           "\"\<Particles 0.38 - 0.45 \[Micro]m\>\"", ",", " ", 
           "\"\<Particles 0.45 - 0.56 \[Micro]m\>\"", ",", " ", 
           "\"\<Particles 0.56 - 0.70 \[Micro]m\>\"", ",", " ", 
           "\"\<Particles 0.70 - 0.94 \[Micro]m\>\"", ",", " ", 
           "\"\<Particles 0.94 - 1.15 \[Micro]m\>\"", ",", " ", 
           "\"\<Particles 1.15 - 1.28 \[Micro]m\>\"", ",", " ", 
           "\"\<Particles 1.28 - 1.38 \[Micro]m\>\"", ",", " ", 
           "\"\<Particles 1.38 - 1.47 \[Micro]m\>\"", ",", " ", 
           "\"\<Particles 1.47 - 1.57  \[Micro]m\>\"", ",", " ", 
           "\"\<Particles 1.57 - 1.69  \[Micro]m\>\"", ",", " ", 
           "\"\<Particles 1.69 - 1.89  \[Micro]m\>\"", ",", " ", 
           "\"\<Particles 1.89 - 2.16  \[Micro]m\>\"", ",", " ", 
           "\"\<Particles 2.16 - 2.52  \[Micro]m\>\"", ",", " ", 
           "\"\<Particles 2.52 - 3.42  \[Micro]m\>\"", ",", " ", 
           "\"\<Particles > 3.42  \[Micro]m\>\"", ",", " ", 
           "\"\<Sum all Particles\>\""}], "}"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"exportdata", "=", 
        RowBox[{"FlattenAt", "[", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"exportdata", ",", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Flatten", "@", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                  RowBox[{"Total", "[", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "&"}], 
              ",", 
              RowBox[{"Transpose", "@", " ", 
               RowBox[{"{", 
                RowBox[{"particles", ",", 
                 RowBox[{"times", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", 
                    RowBox[{"3", ";;", "7"}]}], "]"}], "]"}]}], "}"}]}]}], 
             "]"}]}], "]"}], ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{
         "outp", "~~", "\"\<Datenexport\\\\Particles \>\"", "~~", "ID", "~~", 
          "\"\<.xlsx\>\""}], ",", "exportdata"}], "]"}], ";"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Abbildung", " ", "Balkendiagramm", " ", "mit", " ", "Partikel", " ", 
        "pro", " ", "Atemug"}], "*)"}], ";", "\n", 
      RowBox[{"chart", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"barchartParticlesCleaning", "[", 
          RowBox[{
           RowBox[{"SortBy", "[", 
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{"resultlist", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}], "==", "0"}], "&"}]}], 
              "]"}], ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", 
                 RowBox[{"-", "3"}]}], "]"}], "]"}], "&"}]}], "]"}], ",", 
           "b"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"b", ",", 
           RowBox[{"{", 
            RowBox[{"0.5", ",", "1", ",", "2", ",", "3"}], "}"}]}], "}"}]}], 
        "]"}]}], ";", "\n", 
      RowBox[{"chart", "=", 
       RowBox[{"GraphicsGrid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"chart", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", 
           RowBox[{"chart", "[", 
            RowBox[{"[", 
             RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"Spacings", "->", 
          RowBox[{"Scaled", "[", ".25", "]"}]}], ",", 
         RowBox[{"ImageSize", "->", "1500"}]}], "]"}]}], ";", "\n", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{
        "outp", "~~", 
         "\"\<Balkendiagramm Partikelemission\\\\Partikelemission \>\"", "~~",
          "ID", "~~", "\"\<.jpg\>\""}], ",", "chart"}], "]"}]}]}], "\n", 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8862377563470435`*^9, 3.886237768001483*^9}, {
   3.8862378494376497`*^9, 3.88623785645183*^9}, {3.8862379050751343`*^9, 
   3.886237927803911*^9}, {3.8862379760892677`*^9, 3.8862379768905787`*^9}, {
   3.886238310457858*^9, 3.886238347285615*^9}, {3.8862399484239073`*^9, 
   3.886240006083902*^9}, {3.8862401608638563`*^9, 3.8862401652967176`*^9}, {
   3.886499195959905*^9, 3.886499197139905*^9}, {3.886575931766293*^9, 
   3.886575940750429*^9}, 3.8865765228171535`*^9, {3.886576665665552*^9, 
   3.886576747979*^9}, {3.8865769953768225`*^9, 3.8865771579369345`*^9}, {
   3.886577206401805*^9, 3.8865772073525977`*^9}, {3.8865772621409225`*^9, 
   3.8865772917943783`*^9}, 3.8865773240567493`*^9, {3.8865773541817865`*^9, 
   3.8865773853268805`*^9}, {3.8865774431969967`*^9, 3.88657748287003*^9}, {
   3.886577519723821*^9, 3.886577722915599*^9}, {3.886577754269568*^9, 
   3.8865777961366453`*^9}, {3.886577863758461*^9, 3.8865779263117332`*^9}, 
   3.886578265361779*^9, {3.8865783481431*^9, 3.886578367053243*^9}, {
   3.886578409058862*^9, 3.8865784103281617`*^9}, {3.8865784662064457`*^9, 
   3.886578501072501*^9}, {3.8865785365749245`*^9, 3.8865785573755536`*^9}, {
   3.886578631316013*^9, 3.88657864774172*^9}, {3.8865786798060627`*^9, 
   3.8865787003977785`*^9}, {3.886578829135222*^9, 3.8865788311720734`*^9}, {
   3.8865788705337973`*^9, 3.88657890222841*^9}, {3.886579094225133*^9, 
   3.8865791310056086`*^9}, {3.8865792124819937`*^9, 
   3.8865792535286183`*^9}, {3.8865797397279997`*^9, 3.8865797398959427`*^9}, 
   3.886655930748449*^9, {3.886663233966335*^9, 3.886663312599352*^9}, {
   3.886663368886299*^9, 3.8866633861666346`*^9}, 3.886667543053384*^9, {
   3.886667705730606*^9, 3.886667726870967*^9}, 3.8866677946759586`*^9, {
   3.8866680543312287`*^9, 3.886668057600514*^9}, {3.886668144314283*^9, 
   3.8866682409634457`*^9}, {3.886668302312209*^9, 3.886668304310932*^9}, {
   3.8866683361629305`*^9, 3.886668365416552*^9}, {3.8866684857952375`*^9, 
   3.886668511557005*^9}, {3.886668585149249*^9, 3.8866685881324*^9}, {
   3.8866686450626583`*^9, 3.886668659590037*^9}, {3.8873638346910715`*^9, 
   3.887363862388007*^9}, {3.887364856543128*^9, 3.8873648609205303`*^9}, 
   3.887364947259962*^9, {3.8877752128116636`*^9, 3.8877752174084654`*^9}, 
   3.887775301681366*^9, {3.887775360201652*^9, 3.887775368860511*^9}, {
   3.8892391604842806`*^9, 3.889239186307333*^9}, {3.8892396215766664`*^9, 
   3.8892396243290634`*^9}},ExpressionUUID->"13b833df-7e42-4615-9146-\
d2e87d0f16b3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"evaluation", "/@", "evalfiles"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8862377563470435`*^9, 3.886237768001483*^9}, {
   3.8862378494376497`*^9, 3.88623785645183*^9}, {3.8862379050751343`*^9, 
   3.886237927803911*^9}, {3.8862379760892677`*^9, 3.8862379768905787`*^9}, {
   3.886238310457858*^9, 3.886238347285615*^9}, {3.8862399484239073`*^9, 
   3.886240006083902*^9}, {3.8862401608638563`*^9, 3.8862401652967176`*^9}, {
   3.886499195959905*^9, 3.886499197139905*^9}, {3.886575931766293*^9, 
   3.886575940750429*^9}, 3.8865765228171535`*^9, {3.886576665665552*^9, 
   3.886576747979*^9}, {3.8865769953768225`*^9, 3.8865771579369345`*^9}, {
   3.886577206401805*^9, 3.8865772073525977`*^9}, {3.8865772621409225`*^9, 
   3.8865772917943783`*^9}, 3.8865773240567493`*^9, {3.8865773541817865`*^9, 
   3.8865773853268805`*^9}, {3.8865774431969967`*^9, 3.88657748287003*^9}, {
   3.886577519723821*^9, 3.886577722915599*^9}, {3.886577754269568*^9, 
   3.8865777961366453`*^9}, {3.886577863758461*^9, 3.8865779263117332`*^9}, 
   3.886578265361779*^9, {3.8865783481431*^9, 3.886578367053243*^9}, {
   3.886578409058862*^9, 3.8865784103281617`*^9}, {3.8865784662064457`*^9, 
   3.886578501072501*^9}, {3.8865785365749245`*^9, 3.8865785573755536`*^9}, {
   3.886578631316013*^9, 3.88657864774172*^9}, {3.8865786798060627`*^9, 
   3.8865787003977785`*^9}},
 CellLabel->
  "In[374]:=",ExpressionUUID->"9b3c232a-b49f-461d-b7ef-f2bc879f6b31"]
}, Open  ]]
},
WindowSize->{718.5, 467.},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>0.8 Inherited,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (August 22, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"905bf03a-0071-48d8-913c-60f0d7c6f1c0"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 261, 4, 22, "Input",ExpressionUUID->"393f7b1f-d91d-451a-845b-e1a823fbffb1"],
Cell[686, 21, 228, 3, 25, "Output",ExpressionUUID->"e6df8ebf-873a-461e-b4c5-d2eea45ccead"]
}, Open  ]],
Cell[CellGroupData[{
Cell[951, 29, 3760, 86, 238, "Input",ExpressionUUID->"426a6280-7815-4557-b910-2ae32f1d9b1e"],
Cell[4714, 117, 10665, 223, 1427, "Output",ExpressionUUID->"31f7979b-9c7a-4b16-a84b-1db26b862315"]
}, Open  ]],
Cell[15394, 343, 3297, 55, 114, "Input",ExpressionUUID->"fc290bc9-9b34-4b4b-bd94-5bb2bf1afa0d"],
Cell[18694, 400, 174090, 3219, 6695, "Input",ExpressionUUID->"6c7b4f8f-00e2-4c40-afe5-2e6e06cb1a52"],
Cell[CellGroupData[{
Cell[192809, 3623, 3063, 42, 38, "Input",ExpressionUUID->"53de5e5d-014d-4cc7-aac0-2888044d9f9e"],
Cell[195875, 3667, 602, 10, 66, "Output",ExpressionUUID->"caa9d5f9-847c-4a4f-a5bc-555f91b4bb0a"]
}, Open  ]],
Cell[196492, 3680, 3099, 46, 38, "Input",ExpressionUUID->"288c0620-bde3-4903-b0d9-e804638beef4"],
Cell[199594, 3728, 3051, 46, 38, "Input",ExpressionUUID->"432bd670-ec8f-4194-b5e1-bbf42ff341c6"],
Cell[CellGroupData[{
Cell[202670, 3778, 260, 6, 22, "Input",ExpressionUUID->"108d21e4-c555-48fb-8aa9-35985e089ccf"],
Cell[202933, 3786, 932, 15, 57, "Output",ExpressionUUID->"f0762475-5851-4c89-811f-76b83eedec18"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203902, 3806, 170, 3, 42, "Subtitle",ExpressionUUID->"5d72c844-571d-4eb6-9819-f84285d93dbe"],
Cell[204075, 3811, 304, 6, 23, "Input",ExpressionUUID->"821e0c2f-d788-466f-a16a-5e375ac53978"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204416, 3822, 318, 6, 55, "Subtitle",ExpressionUUID->"21e4ca7f-593f-4330-874e-9aa0a4dfe9e0"],
Cell[204737, 3830, 328, 6, 55, "Subtitle",ExpressionUUID->"f94d3ec7-a5e7-45a1-b42a-146f53fb1ecd"],
Cell[205068, 3838, 3480, 80, 300, "Subtitle",ExpressionUUID->"d80f8984-6df8-4d61-9c02-54200257bee1"],
Cell[208551, 3920, 291, 5, 42, "Subtitle",ExpressionUUID->"6cba57cf-16b3-4957-9be5-9c19dbb72160"],
Cell[208845, 3927, 111573, 2293, 5734, "Subtitle",ExpressionUUID->"04df89b1-afc8-4464-aa94-c80bc622a841"],
Cell[320421, 6222, 231, 4, 55, "Subtitle",ExpressionUUID->"855ccd11-6651-47ee-b810-d0c41ff5b130"],
Cell[320655, 6228, 3763, 95, 191, "Input",ExpressionUUID->"6afc29d3-e8d7-4b40-82bc-50c18ac78cc8"],
Cell[324421, 6325, 3437, 79, 130, "Input",ExpressionUUID->"7ed6b274-0816-43d0-86db-2b7ddebbabee"],
Cell[327861, 6406, 7113, 175, 602, "Input",ExpressionUUID->"434c3156-85e8-4968-ad4d-faf6f02f67fc"],
Cell[334977, 6583, 24604, 586, 1557, "Input",ExpressionUUID->"13b833df-7e42-4615-9146-d2e87d0f16b3"],
Cell[359584, 7171, 1488, 22, 38, "Input",ExpressionUUID->"9b3c232a-b49f-461d-b7ef-f2bc879f6b31"]
}, Open  ]]
}
]
*)

